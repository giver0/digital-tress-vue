{"version":3,"file":"js/app.7f8bb280.js","mappings":"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","sources":["webpack://digital-trees-vue/./src/App.vue","webpack://digital-trees-vue/./src/components/field-box/field-box.vue","webpack://digital-trees-vue/./src/constant/basic.js","webpack://digital-trees-vue/./src/components/classes/cellObject.js","webpack://digital-trees-vue/./src/components/classes/treeObject.js","webpack://digital-trees-vue/./src/components/control-button/control-button.vue","webpack://digital-trees-vue/./src/components/control-button/control-button.vue?838d","webpack://digital-trees-vue/./src/components/cell-header/cell-header.vue","webpack://digital-trees-vue/./src/components/cell-header/cell-header.vue?1323","webpack://digital-trees-vue/./src/components/cell-counter/cell-counter.vue","webpack://digital-trees-vue/./src/components/cell-counter/cell-counter.vue?8cd2","webpack://digital-trees-vue/./src/components/cells-field/cells-field.vue","webpack://digital-trees-vue/./src/components/cell-block/cell-block.vue","webpack://digital-trees-vue/./src/components/cell-block/cell-block.vue?dc6c","webpack://digital-trees-vue/./src/components/cells-field/cells-field.vue?dbec","webpack://digital-trees-vue/./src/components/cycle-counter/cycle-counter.vue","webpack://digital-trees-vue/./src/components/cycle-counter/cycle-counter.vue?d916","webpack://digital-trees-vue/./src/components/log-box/log-box.vue","webpack://digital-trees-vue/./src/components/log-box/log-box.vue?20cb","webpack://digital-trees-vue/./src/components/field-box/field-box.vue?d118","webpack://digital-trees-vue/./src/App.vue?7ccd","webpack://digital-trees-vue/./src/main.js","webpack://digital-trees-vue/webpack/bootstrap","webpack://digital-trees-vue/webpack/runtime/chunk loaded","webpack://digital-trees-vue/webpack/runtime/compat get default export","webpack://digital-trees-vue/webpack/runtime/define property getters","webpack://digital-trees-vue/webpack/runtime/global","webpack://digital-trees-vue/webpack/runtime/hasOwnProperty shorthand","webpack://digital-trees-vue/webpack/runtime/publicPath","webpack://digital-trees-vue/webpack/runtime/jsonp chunk loading","webpack://digital-trees-vue/webpack/startup"],"sourcesContent":["<template>\n  <fieldBox />\n</template>\n\n<script>\nimport fieldBox from './components/field-box'\n\nexport default {\n  name: 'App',\n  components: {\n    fieldBox,\n  },\n  methods: {\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nbody{\n  margin: 0px;\n  padding: 0px;\n}\n\n@font-face {\n  font-family: subwayTicker;\n  src: url(@/fonts/SUBWT___.ttf);\n}\n</style>\n","<template>\n  <div>\n    <CellHeader />\n    <div class=\"digital-tree__layout\">\n      <div class=\"digital-tree__main-layer\">\n        <CellsField\n          :field-cells=\"fieldCells\"\n          :choosen-tree-id=\"displayCell?.parentTree?.id\"\n          @clicked=\"displayCellParam\"\n        />\n        <div\n          v-if=\"displayCell.parentTree?.id\"\n          class=\"tree-info\"\n        >\n          <div class=\"tree-info__item\">\n            type - {{ displayCell.type }}\n          </div>\n          <div class=\"tree-info__item\">\n            i - {{ displayCell.i }}\n          </div>\n          <div class=\"tree-info__item\">\n            j - {{ displayCell.j }}\n          </div>\n          <div class=\"tree-info__item\">\n            id - {{ displayCell.id }}\n          </div>\n          <div class=\"tree-info__item\">\n            color - {{ displayCell.color }}\n          </div>\n          <div class=\"tree-info__item\">\n            isCellFalling - {{ displayCell.isCellFalling }}\n          </div>\n          <div class=\"tree-info__item\">\n            parentTree - {{ displayCell.parentTree?.id }}\n          </div>\n          <div class=\"tree-info__item\">\n            tree energy - {{ displayCell.parentTree?.energy }}\n          </div>\n          <div class=\"tree-info__item\">\n            tree cells - {{ displayCell.parentTree?.cells.length }}\n          </div>\n          <div class=\"tree-info__item\">\n            isFreeCellsAround - {{ displayCell.parentTree?.isFreeCellsAround }}\n          </div>\n          <div class=\"tree-info__item\">\n            {{ displayCell.parentTree?.genome }}\n          </div>\n        </div>\n      </div>\n      <div class=\"digital-tree__control\">\n        <ControlButton\n          :is-game-paused=\"isGamePaused\"\n          :is-can-change-color=\"isCanChangeColor\"\n          @onPauseGame=\"pauseGame\"\n          @onChangeColor=\"ChangeColor\"\n        />\n        <div class=\"digital-tree__counter\">\n          <CycleCounter\n            :cycle-counter=\"cycleCounter\"\n            :full-cycle-counter=\"fullCycleCounter\"\n          />\n          <div class=\"digital-tree__counter-box\">\n            <div class=\"digital-tree__counter-text\">\n              Delay (ms)\n            </div>\n            <img\n              src=\"@/assets/close.svg\"\n              class=\"digital-tree__counter-default\"\n              @click=\"handleDelay\"\n            >\n            <input\n              id=\"counter-speed\"\n              v-model=\"timeRange\"\n              type=\"number\"\n              placeholder=\"Speed\"\n              name=\"quantity\"\n              step=\"10\"\n              min=\"0\"\n              max=\"6000\"\n              class=\"counter-text-input\"\n            >\n          </div>\n          <div class=\"digital-tree__counter-box\">\n            <div class=\"digital-tree__counter-text\">\n              Tree count\n            </div>\n            <input\n              id=\"counter-tree\"\n              v-model=\"treeCount\"\n              type=\"number\"\n              placeholder=\"Tree count\"\n              name=\"quantity\"\n              step=\"1\"\n              min=\"0\"\n              max=\"10\"\n              class=\"counter-text-input\"\n            >\n          </div>\n          <div class=\"digital-tree__counter-box\">\n            <div class=\"digital-tree__counter-text\">\n              Column\n            </div>\n            <input\n              id=\"counter-tree\"\n              v-model=\"fieldWidth\"\n              type=\"number\"\n              placeholder=\"Tree count\"\n              name=\"quantity\"\n              step=\"1\"\n              min=\"1\"\n              class=\"counter-text-input\"\n            >\n          </div>\n          <div class=\"digital-tree__counter-box\">\n            <div class=\"digital-tree__counter-text\">\n              Raw\n            </div>\n            <input\n              id=\"counter-field-size-raw\"\n              v-model=\"fieldHeight\"\n              type=\"number\"\n              placeholder=\"Tree count\"\n              name=\"quantity\"\n              step=\"1\"\n              min=\"1\"\n              class=\"counter-text-input\"\n            >\n          </div>\n        </div>\n        <div\n          id=\"counter-trees-cell\"\n          class=\"digital-tree__counter-trees-cell-boxs\"\n        >\n          <CellCounter\n            :digital-trees=\"digitalTrees\"\n            @clicked=\"displayCellParam\"\n          />\n        </div>\n        <!-- <LogBox\n          :logBoxArray = \"logTextArray\"\n        /> -->\n      </div>\n    </div>\n    <!-- <div>\n      <FieldCenter />\n    </div> -->\n    <!-- <div >\n      <div v-for=\"cellRaw in fieldCells\" :key=\"cellRaw\" class=\"testArray\">\n        <div v-for=\"cell in fieldRaw\" :key=\"cell.id\" >\n          <CellBlock/>\n        </div>\n        <br>\n      </div>\n      Some text. Hello from WS\n    </div> -->\n  </div>\n</template>\n\n<script>\n\nimport cellObject from '../classes/cellObject'\nimport treeObject from '../classes/treeObject'\nimport ControlButton from '../control-button'\nimport CellHeader from '../cell-header'\nimport CellCounter from '../cell-counter'\nimport CellsField from '../cells-field'\nimport CycleCounter from '../cycle-counter'\nimport LogBox from '../log-box'\nimport { ref, onMounted, watch, computed } from 'vue'\n\nconst filedBox = {\n  name: 'fieldBox',\n  components: {\n    ControlButton,\n    CellHeader,\n    CellCounter,\n    CellsField,\n    CycleCounter,\n    LogBox,\n  },\n  setup() {\n    const logTextArray = ref([])\n    const fieldWidth = ref(30)\n    const fieldHeight = ref(10)\n    const digitalTrees = ref([])\n    const treeCount = ref(5)\n    const fieldCells = ref(new Array(fieldHeight.value).fill(0)\n      .map(() => new Array(fieldWidth.value)))\n\n    const timeRange = ref(300)\n\n    const cycleCounter = ref(0)\n    const fullCycleCounter = ref(0)\n\n    const isGameStop = ref(false)\n    const isGamePaused = ref(false)\n    const isGamePausedAtMoment = ref(false)\n    const isCanChangeColor = ref(true)\n    const displayCell = ref({})\n\n    // const isAnyTreesCanMove = computed(() => {\n    //   const isFreeCellsArray = digitalTrees.value\n    //     .map(Tree => Tree.isFreeCellsAround)\n    //   const isCanMove = isFreeCellsArray.includes(true)\n    //   return isCanMove\n    // })\n    const isAnyTreesCanMove = computed(() => {\n      return true\n    })\n\n    const sortedDigitalTrees = computed(() => {\n      if (digitalTrees.value.length < 1) {\n        return digitalTrees.value\n      }\n      return digitalTrees.value.sort((a, b) => {\n        return a.cells.length - b.cells.length\n      })\n    })\n\n    watch(() => treeCount.value, async (current, previous) => {\n      isGamePaused.value = true\n      current > previous ? await addTree() : await deleteTree()\n    })\n\n    watch(() => fieldWidth.value, (current, previous) => {\n      current > previous ? addColumn() : deleteColumn()\n    })\n\n    watch(() => fieldHeight.value, (current, previous) => {\n      current > previous ? addRow() : deleteRow()\n    })\n\n    console.log('Hi here is start')\n    createFieldObject()\n    createFirstTrees()\n\n    onMounted(() => {\n      console.log('Hi Mounted')\n      configBeforeStart()\n      console.log('config before start finished')\n      mainCycle()\n    })\n\n    function createFieldObject() {\n      for (let j = 0; j < fieldCells.value.length; j++) {\n        for (let i = 0; i < fieldCells.value[j].length; i++) {\n          fieldCells.value[j][i] = new cellObject(\n            i,\n            j,\n            fieldCells.value,\n          )\n        }\n      }\n    }\n\n    function createFirstTrees() {\n      for (let treeIndex = 0; treeIndex < treeCount.value; treeIndex++) {\n        new treeObject(digitalTrees.value, fieldCells.value, logTextArray.value)\n      }\n    }\n\n    function configBeforeStart() {\n      console.log('In config')\n      addFirstCellTrees()\n    }\n\n    function addFirstCellTrees() {\n      for (const tree of digitalTrees.value) {\n        tree.addFirstCell()\n      }\n    }\n\n    async function mainCycle() {\n      while (isGameStop.value === false) {\n        if (isGamePaused.value === false) {\n          await cycle()\n        }\n        if (isGamePaused.value === false) {\n          restart()\n        } else {\n          await sleep(200)\n        }\n      }\n    }\n\n    async function cycle() {\n      while (isAnyTreesCanMove.value) {\n        console.time('startCycle')\n        await sleep(timeRange.value)\n        // console.log('======= new turn =======')\n        chooseActionAtAllTree()\n        deleteEmptyTrees()\n        // console.log('tree in main cycle', digitalTrees.value)\n        cycleCounter.value += 1\n        if (isGamePaused.value) {\n          isGamePausedAtMoment.value = true\n          return\n        }\n        // console.log('digitalTrees.value.length :>> ', digitalTrees.value);\n        console.timeEnd('startCycle')\n      }\n      fullCycleCounter.value += 1\n      logNewFullCycle()\n    }\n\n    function sleep(ms) {\n      return new Promise((resolve) => {\n        setTimeout(resolve, ms)\n      })\n    }\n\n    async function chooseActionAtAllTree() {\n      for (const tree of digitalTrees.value) {\n        await tree.chooseAction()\n        // this.$forceUpdate()\n      }\n    }\n\n    function deleteEmptyTrees() {\n      let badTreeCount = 0\n      digitalTrees.value.forEach((tree, index) => {\n        if (tree.cells.length === 0 || tree.energy < 0) {\n          badTreeCount = badTreeCount + 1\n          tree.allCellToField()\n          tree.deleteAllCells()\n          digitalTrees.value.splice(index, 1)\n        }\n      })\n      fieldCells.value.forEach(\n        raw => raw.forEach(\n          cell => {\n            if (cell?.parentTree !== null) {\n              if (cell?.parentTree.energy < 0) {\n                cell.setFieldType()\n              }\n            }\n          },\n        ),\n      )\n    }\n\n    function logNewFullCycle() {\n      logTextArray.value.push('========= New cycle =========')\n    }\n\n    function restart() {\n      cleanField()\n      console.log('CleanField')\n\n      for (const tree of digitalTrees.value) {\n        tree.reset()\n      }\n\n      if (isCanChangeColor.value) {\n        changeTreesColor()\n      }\n      // logFieldCell()\n      configBeforeStart()\n      console.log('config')\n    }\n\n    function cleanField() {\n      for (const raw of fieldCells.value) {\n        for (const cell of raw) {\n          cell.setFieldType()\n        }\n      }\n    }\n\n    function changeTreesColor() {\n      for (const tree of digitalTrees.value) {\n        tree.changeRandomColor()\n      }\n    }\n\n    function pauseGame() {\n      isGamePaused.value = !isGamePaused.value\n      if (isGamePaused.value === false) {\n        // this.mainCycle()\n        isGamePausedAtMoment.value = false\n      }\n    }\n\n    function ChangeColor() {\n      isCanChangeColor.value = isCanChangeColor.value === true ? false : true\n    }\n\n    async function addTree() {\n      while (isGamePausedAtMoment.value === true) {\n        await sleep(200)\n      }\n      console.log('Added tree')\n      new treeObject(digitalTrees.value, fieldCells.value, logTextArray.value)\n      digitalTrees.value[digitalTrees.value.length - 1].addFirstCell()\n      await pauseGame()\n    }\n\n    async function deleteTree() {\n      while (isGamePausedAtMoment.value === true) {\n        await sleep(200)\n      }\n      for (const cell of digitalTrees.value[digitalTrees.value.length - 1].cells) {\n        cell.setFieldType()\n        await sleep(100)\n      }\n      digitalTrees.value.pop()\n      await pauseGame()\n    }\n\n    function addColumn() {\n      for (let j = 0; j < fieldCells.value.length; j++) {\n        fieldCells.value[j].push(\n          new cellObject(\n            fieldCells.value[j].length,\n            j,\n            fieldCells.value,\n          ),\n        )\n      }\n    }\n\n    function deleteColumn() {\n      for (let j = 0; j < fieldCells.value.length; j++) {\n        fieldCells.value[j].pop()\n      }\n    }\n\n    function addRow() {\n      fieldCells.value.push([])\n      for (let i = 0; i < fieldCells.value[0].length; i++) {\n        fieldCells.value[fieldCells.value.length - 1].push(\n          new cellObject(\n            i,\n            fieldCells.value.length - 1,\n            fieldCells.value,\n          ),\n        )\n      }\n    }\n\n    function deleteRow() {\n      fieldCells.value.pop()\n    }\n\n    function displayCellParam(i, j) {\n      console.log('display cell', i, j)\n      console.log(`display cell`, i, ' ', j, fieldCells.value[j][i])\n      displayCell.value = fieldCells.value[j][i]\n      // displayCell.value = cell\n    }\n\n    function handleDelay() {\n      timeRange.value = 0\n    }\n\n    return {\n      treeCount,\n      timeRange,\n      fieldWidth,\n      fieldCells,\n      fieldHeight,\n      displayCell,\n      logTextArray,\n      cycleCounter,\n      digitalTrees,\n      isGamePaused,\n      isCanChangeColor,\n      fullCycleCounter,\n      sortedDigitalTrees,\n      pauseGame,\n      handleDelay,\n      ChangeColor,\n      displayCellParam,\n    }\n  },\n}\nexport default filedBox\n</script>\n\n<style>\n  @import \"field-box\"\n</style>\n","export const BASIC_COLOR = '#808080'\nexport const TYPE_FIELD = 'field'\nexport const TYPE_CELL = 'cell'\n\nexport const GENOME_COUNT = 16\nexport const GENOME_MAX_VALUE = 32\n","import {\n  TYPE_CELL,\n  TYPE_FIELD,\n  BASIC_COLOR,\n} from '@/constant/basic'\n\nexport default class cellObject {\n  constructor(i, j, fieldCells) {\n    this.i = i\n    this.j = j\n    this.id = `i${i}j${j}`\n    this.indexInTree = null\n    this.type = TYPE_FIELD\n    this.color = BASIC_COLOR\n    this.genome = 0\n    this.nextCell = null\n    this.parentTree = null\n    this.isCreateAnimation = true\n    this.isCellAnimation = false\n    this.isCellFalling = false\n    this.fieldCells = fieldCells\n  }\n\n  setColor(color) {\n    this.color = color\n  }\n\n  setCellType() {\n    this.type = TYPE_CELL\n    this.isCreateAnimation = false\n    this.isCellAnimation = true\n  }\n\n  setFieldType() {\n    this.isCreateAnimation = false\n    this.isCreateAnimation = true\n    this.isCellAnimation = false\n    this.type = TYPE_FIELD\n    this.color = BASIC_COLOR\n    this.indexInTree = null\n    this.isCellFalling = false\n    this.parentTree = null\n    this.genome = 0\n    this.nextCell = null\n  }\n\n  generatedEnergyByCell() {\n    const countCellAbove = 2\n\n    if (this.isCellFalling) {\n      return 0\n    } else {\n      const isCellAtUpperPoint = this.j === 0\n      if (isCellAtUpperPoint) {\n        return 3\n      }\n      const isCellAtLowerPoint = this.j === this.fieldCells.length - 1\n      if (isCellAtLowerPoint) {\n        return 0\n      }\n      let cellGeneratedEnergy = 0\n      for (let index = 1; index < countCellAbove + 1; index++) {\n        const jForCheck = this.j - index\n        const isCellExist = jForCheck in this.fieldCells && this.i in this.fieldCells[jForCheck]\n        if (isCellExist) {\n          const isUpperCellField = this.fieldCells[jForCheck][this.i]?.type === TYPE_FIELD\n          if (isUpperCellField) {\n            cellGeneratedEnergy = cellGeneratedEnergy + 1\n          } else {\n            index = countCellAbove + 1\n            return cellGeneratedEnergy\n          }\n        } else {\n          index = countCellAbove + 1\n          return 3\n        }\n      }\n      return cellGeneratedEnergy\n    }\n  }\n\n  cellFalling() {\n    this.isCellFalling = true\n  }\n\n  cellIsNotFalling() {\n    this.isCellFalling = false\n  }\n}\n","import {\n  TYPE_FIELD,\n  BASIC_COLOR,\n  GENOME_COUNT,\n  GENOME_MAX_VALUE,\n} from '@/constant/basic'\n\nexport default class treeObject {\n  constructor(\n    digitalTrees,\n    fieldCells,\n    logTextArray,\n    genome = this.gererateGenome(),\n    headColor = this.generateRandomColor(),\n    bodyColor = this.generateRandomColor(),\n  ) {\n    this.digitalTrees = digitalTrees\n    this.fieldCells = fieldCells\n    this.logTextArray = logTextArray\n    this.id = this.generateID()\n    this.cells = []\n    this.counterCell = 0\n    this.counterCellAll = 0\n    this.lastCell = null\n    this.isFreeCellsAround = true\n    this.headColor = headColor\n    this.bodyColor = bodyColor\n    this.positionCurrent = null\n    this.positionNext = null\n    this.energy = 20\n    this.genome = genome\n    this.lastIncreaseEnergy = 0\n    this.lastReduceEnergy = 0\n    digitalTrees.push(this)\n  }\n\n  generateRandomColor() {\n    let randomColor = BASIC_COLOR\n    while (randomColor === BASIC_COLOR) {\n      randomColor = '#'\n      randomColor += Math.floor(Math.random() * 16777215).toString(16)\n    }\n    return randomColor\n  }\n\n  generateID() {\n    const length = 6\n    let result = ''\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    const charactersLength = characters.length\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength))\n    }\n    return result\n  }\n\n  addFirstCell() {\n    try {\n      const firstCell = this.randomCellFloor()\n      this.cells.push(firstCell)\n\n      this.cells[0].setColor(this.headColor)\n      this.cells[0].setCellType()\n      this.cells[0].parentTree = this\n      this.cells[0].indexInTree = this.cells.length - 1\n      this.cells[0].genome = 0\n      this.refreshLastCell()\n      this.createCellLog()\n    } catch (error) {\n      console.log('========== Some Error ==========')\n      console.log(error)\n    }\n  }\n\n  addCellFromParent(cell) {\n    this.cells.push(cell)\n    this.counterCell = 1\n    this.counterCellAll = 1\n    this.refreshLastCell()\n    this.lastCell.color = this.headColor\n    this.lastCell.genome = 0\n    this.lastCell.parentTree = this\n  }\n\n  chooseRandomStartCell() {\n    let whileCounter = 0\n    let j\n    let i\n    while (whileCounter < this.fieldCells.length * this.fieldCells[0].length) {\n      j = this.getRandomInt(0, this.fieldCells.length)\n      i = this.getRandomInt(0, this.fieldCells[0].length)\n      // logSomeText(\"In chooseRandomStartCell()\")\n      console.log('In chooseRandomStartCell()')\n\n      if (this.fieldCells[j][i].color === BASIC_COLOR) {\n        return this.fieldCells[j][i]\n      }\n      whileCounter += 1\n   }\n  }\n\n  randomCellFloor() {\n    let whileCounter = 0\n    let j\n    let i\n    while (whileCounter < this.fieldCells[0].length * 2) {\n      j = this.fieldCells.length - 1\n      i = this.getRandomInt(0, this.fieldCells[0].length)\n      // logSomeText(\"In chooseRandomStartCell()\")\n      console.log('In chooseRandomStartCell()')\n\n      if (this.fieldCells[j][i].type === TYPE_FIELD) {\n        return this.fieldCells[j][i]\n      }\n      whileCounter += 1\n   }\n  }\n\n  getRandomInt(min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min)) + min // Максимум не включается, минимум включается\n  }\n\n  gererateGenome() {\n    const genome = new Array(GENOME_COUNT).fill(0)\n    .map(() => {\n      return {\n        upGen: this.getRandomInt(0, GENOME_MAX_VALUE),\n        downGen: this.getRandomInt(0, GENOME_MAX_VALUE),\n        leftGen: this.getRandomInt(0, GENOME_MAX_VALUE),\n        rightGen: this.getRandomInt(0, GENOME_MAX_VALUE),\n      }\n    })\n    console.log('genome', genome)\n    return genome\n  }\n\n  mutateGenome() {\n    const randomGenomRaw = this.getRandomInt(0, GENOME_COUNT)\n    const randomGenDirection = () => {\n      const randomInt = this.getRandomInt(0, 4)\n      if (randomInt === 0) {\n        this.genome[randomGenomRaw].upGen = this.getRandomInt(0, GENOME_MAX_VALUE)\n      }\n      if (randomInt === 1) {\n        this.genome[randomGenomRaw].downGen = this.getRandomInt(0, GENOME_MAX_VALUE)\n      }\n      if (randomInt === 2) {\n        this.genome[randomGenomRaw].leftGen = this.getRandomInt(0, GENOME_MAX_VALUE)\n      }\n      if (randomInt === 3) {\n        this.genome[randomGenomRaw].rightGen = this.getRandomInt(0, GENOME_MAX_VALUE)\n      }\n    }\n  }\n\n  refreshLastCell() {\n    this.lastCell = this.cells[this.cells.length - 1]\n  }\n\n  chooseAction() {\n    if (this.lastCell.isCellFalling) {\n      // console.time('moveCellDown')\n      this.moveCellDown()\n      // console.timeEnd('moveCellDown')\n    } else {\n      // console.time('realiseGenome')\n      this.realiseGenome()\n      // this.createCell()\n      // console.timeEnd('realiseGenome')\n    }\n    // console.time('refreshEnergy')\n    this.refreshEnergy()\n    // console.timeEnd('refreshEnergy')\n  }\n\n  realiseGenome() {\n    this.cells.forEach(cell => {\n      if (cell.color === this.headColor) {\n        const cellGenome = this.genome[cell.genome]\n        // for (const gen in cellGenome) {\n        //   cellGenome[gen]\n\n        // }\n        // console.log('cellGenome', cellGenome);\n        let newI = null\n        let newJ = null\n        if (cellGenome.upGen <= 15) {\n          newI = cell.i\n          newJ = cell.j - 1\n          if (this.isNextCellField(newI, newJ)) {\n            this.createCellGenome(cell, newI, newJ, cellGenome.upGen)\n          }\n        }\n        if (cellGenome.downGen <= 15) {\n          newI = cell.i\n          newJ = cell.j + 1\n          if (this.isNextCellField(newI, newJ)) {\n            this.createCellGenome(cell, newI, newJ, cellGenome.downGen)\n          }\n        }\n        if (cellGenome.leftGen <= 15) {\n          newI = cell.i - 1\n          newJ = cell.j\n          if (this.isNextCellField(newI, newJ)) {\n            this.createCellGenome(cell, newI, newJ, cellGenome.leftGen)\n          }\n        }\n        if (cellGenome.rightGen <= 15) {\n          newI = cell.i + 1\n          newJ = cell.j\n          if (this.isNextCellField(newI, newJ)) {\n            this.createCellGenome(cell, newI, newJ, cellGenome.rightGen)\n          }\n        }\n      }\n    })\n  }\n\n  createCellGenome(cell, newI, newJ, genomeToImplement) {\n    // console.log(`next i and j`, i, j);\n    cell.setColor(this.bodyColor)\n    const nextCell = this.fieldCells[newJ][newI]\n    nextCell.setColor(this.headColor)\n    nextCell.setCellType()\n\n    this.counterCellAll = this.counterCellAll + 1\n    this.counterCell = this.counterCell + 1\n    nextCell.indexInTree = this.counterCellAll\n    nextCell.genome = genomeToImplement\n    nextCell.parentTree = this\n    this.cells.push(nextCell)\n    this.refreshLastCell()\n    this.createCellLog()\n  }\n\n  isNextCellField(newI, newJ) {\n    if (newJ in this.fieldCells && newI in this.fieldCells[newJ]) {\n      return this.fieldCells[newJ][newI]?.color === BASIC_COLOR\n    } else {\n      return false\n    }\n  }\n\n  createCell() {\n    const freeCellsArray = this.FreeCellsAround2(\n      this.lastCell,\n    )\n    // console.log('freeCellsArray', freeCellsArray);\n\n    if (freeCellsArray.length === 0) {\n      this.isFreeCellsAround = false\n      this.lastCell.isCellFalling = true\n      if (this.counterCell > 1) {\n        this.deleteTreeBody()\n      }\n    } else {\n      const FreeCellCoordinate = this.chooseRandomPoint(freeCellsArray)\n      const [j, i] = FreeCellCoordinate\n      this.addNextCell(j, i)\n    }\n  }\n\n  FreeCellsAround(cell) {\n    // console.log('in free cell');\n    // console.log(cell.i, ' ', cell.j);\n    const freeFields = []\n    let i = cell.i - 1\n    let j = cell.j - 1\n    const iEnd = cell.i + 2\n    const jEnd = cell.j + 2\n\n    for (; j < jEnd; j++) {\n      for (i = cell.i - 1; i < iEnd; i++) {\n        if (this.isCoordinateInField(i, j)) {\n          if (this.fieldCells[j][i].color === BASIC_COLOR) {\n            freeFields.push([j, i])\n          }\n        }\n      }\n    }\n    return freeFields\n  }\n\n  FreeCellsAround2(cell) {\n    // console.log('in free cell');\n    // console.log(cell.i, ' ', cell.j);\n    const freeFields = []\n    let i = cell.i - 1\n    let j = cell.j - 1\n    const iEnd = cell.i + 2\n    const jEnd = cell.j + 2\n    const fieldToCheck = []\n\n    for (let index = j; index < jEnd; index++) {\n\n    }\n\n    for (; j < jEnd; j++) {\n      for (i = cell.i - 1; i < iEnd; i++) {\n        if (j in this.fieldCells && i in this.fieldCells[j]) {\n          if (this.fieldCells[j][i].type === TYPE_FIELD) {\n            freeFields.push([j, i])\n          }\n        }\n      }\n    }\n    return freeFields\n  }\n\n  isCoordinateInField(i, j) {\n    return i >= 0 && i < this.fieldCells[0].length && j >= 0 && j < this.fieldCells.length\n  }\n\n  chooseRandomPoint(freeCells) {\n    const randomValue = this.getRandomInt(0, freeCells.length)\n    return freeCells[randomValue]\n  }\n\n  addNextCell(j, i) {\n    // console.log(`next i and j`, i, j);\n    this.lastCell.setColor(this.bodyColor)\n    const nextCell = this.fieldCells[j][i]\n    nextCell.setColor(this.headColor)\n    nextCell.setCellType()\n\n    this.counterCellAll = this.counterCellAll + 1\n    this.counterCell = this.counterCell + 1\n    nextCell.indexInTree = this.counterCellAll\n    nextCell.parentTree = this\n    this.cells.push(nextCell)\n    this.refreshLastCell()\n    // this.nextCell = nextCell\n    this.createCellLog()\n  }\n\n  createCellLog() {\n    // let logText = \"Create cell column:\" + this.lastCell.i + \", raw:\" + this.lastCell.j +\", TreeID: \"+this.id\n    const logObject = {\n      i: this.lastCell.i,\n      j: this.lastCell.j,\n      id: this.id,\n      type: 'create',\n      headColor: this.headColor,\n      bodyColor: this.bodyColor,\n    }\n    this.logTextArray.push(logObject)\n    if (this.logTextArray.length > 50) {\n      this.logTextArray.shift()\n    }\n  }\n\n  reset() {\n    this.isFreeCellsAround = true\n    this.cells = []\n    this.lastCell = null\n  }\n\n  changeRandomColor() {\n    this.headColor = this.generateRandomColor()\n    this.bodyColor = this.generateRandomColor()\n  }\n\n  moveCellDown() {\n    // console.log('i:', this.i, 'j:', this.j, 'Tree id:', this.parentTree);\n    // console.log('field move', this.fieldCells[this.j][this.i]);\n    if (this.lastCell.j === this.fieldCells.length - 1) {\n      // console.log('At bottom');\n      this.lastCell.isCellFalling = false\n      this.lastCell.isFreeCellsAround = true\n      this.realiseGenome()\n    } else {\n      // const nextJ = this.j + 1\n      // console.log('need move');\n      this.positionCurrent = this.lastCell\n      this.positionNext = this.fieldCells[this.positionCurrent.j + 1][this.positionCurrent.i]\n      // console.log('positionNext', this.positionNext);\n      const isBottomCellField = this.positionNext.type === TYPE_FIELD\n      // console.log('isBottomCellField', isBottomCellField);\n      if (isBottomCellField) {\n        // console.log('moveTo');\n        // console.log(this);\n\n        const keyToCopy = [\n          'type',\n          'color',\n          'parentTree',\n          'isCellFalling',\n          'indexInTree',\n        ]\n\n        keyToCopy.forEach(key => {\n          this.positionNext[key] = this.positionCurrent[key]\n        })\n\n        this.lastCell = this.positionNext\n        this.cells[0] = this.positionNext\n        this.positionCurrent.setFieldType()\n      }\n    }\n  }\n\n  refreshEnergy() {\n    // console.time('increaseEnergy')\n    this.increaseEnergy()\n    // console.timeEnd('increaseEnergy')\n    // console.time('reduceEnergy')\n    this.reduceEnergy()\n    // console.timeEnd('reduceEnergy')\n    // console.time('checkIsEnergyOver')\n    this.checkIsEnergyOver()\n    // console.timeEnd('checkIsEnergyOver')\n  }\n\n  increaseEnergy() {\n    let generatedEnergyByCell = 0\n    this.cells.forEach(cell => {\n      generatedEnergyByCell = generatedEnergyByCell + cell.generatedEnergyByCell()\n    })\n    this.lastIncreaseEnergy = generatedEnergyByCell\n    this.energy = this.energy + generatedEnergyByCell\n  }\n\n  reduceEnergy() {\n    this.lastReduceEnergy = this.cells.length\n    this.energy = this.energy - this.cells.length\n  }\n\n  checkIsEnergyOver() {\n    const isEnergyOver = this.energy < 0\n    if (isEnergyOver) {\n      if (this.cells.length <= 1) {\n        this.allCellToField\n        this.deleteAllCells()\n      } else {\n        this.deleteTreeBody()\n        this.createTreeFromHeadCell()\n      }\n      // this.deleteEmptyTrees()\n    }\n  }\n\n  deleteTreeBody() {\n    // console.log('in delete body');\n\n    this.cells.forEach(cell => {\n      if (cell.color === this.bodyColor) {\n        cell.setFieldType()\n      }\n    })\n    this.cells = this.cells.filter(cell => cell.color === this.headColor)\n\n    this.cells.forEach(cell => cell.cellFalling())\n\n    this.counterCell = 1\n  }\n\n  createTreeFromHeadCell() {\n    this.cells.forEach(cell => {\n      const newTree = new treeObject(\n        this.digitalTrees,\n        this.fieldCells,\n        this.logTextArray,\n        this.genome,\n        this.headColor,\n        this.bodyColor,\n      )\n      newTree.addCellFromParent(cell)\n      newTree.mutateGenome()\n    })\n  }\n\n  allCellToField() {\n    this.cells.forEach(cell => cell.setFieldType)\n  }\n\n  deleteAllCells() {\n    this.cells = []\n    this.lastCell = {}\n  }\n\n  deleteEmptyTrees() {\n    const treeIndex = this.digitalTrees.findIndex(tree => tree.cells.length === 0)\n    if (treeIndex !== -1) {\n      this.digitalTrees.splice(treeIndex, 1)\n    }\n  }\n}\n","<template>\n  <div class=\"digital-tree__control-button\">\n    <img\n      v-if=\"isGamePaused === false\"\n      id=\"field-left-control-pause\"\n      src=\"https://img.icons8.com/external-bearicons-glyph-bearicons/64/000000/external-Pause-essential-collection-bearicons-glyph-bearicons.png\"\n      class=\"digital-tree__field-left-control-button\"\n      style=\"height:48px\"\n      @click=\"pauseGame\"\n    >\n    <img\n      v-else\n      id=\"field-left-control-pause\"\n      src=\"https://img.icons8.com/external-bearicons-glyph-bearicons/64/000000/external-Play-essential-collection-bearicons-glyph-bearicons.png\"\n      class=\"digital-tree__field-left-control-button\"\n      style=\"height:48px\"\n      @click=\"pauseGame\"\n    >\n    <img\n      id=\"field-left-control-restart\"\n      src=\"https://img.icons8.com/glyph-neue/64/000000/restart.png\"\n      class=\"digital-tree__field-left-control-button\"\n      style=\"height:56px\"\n      @click=\"restartPage\"\n    >\n    <img\n      id=\"field-left-control-color\"\n      src=\"@/assets/paint-palette-svgrepo-com.svg\"\n      class=\"digital-tree__field-left-control-button\"\n      :style=\"colorButtonStyle\"\n      @click=\"stopChangeColor\"\n    >\n  </div>\n</template>\n\n<script>\n\nimport { ref } from 'vue'\n\nexport default ({\n  name: 'ControlButton',\n  props: {\n    isGamePaused: {\n      type: Boolean,\n    },\n    isCanChangeColor: {\n      type: Boolean,\n    },\n  },\n  setup(props, { emit }) {\n    const colorButtonStyle = ref({})\n\n    function restartPage() {\n      location.reload()\n    }\n\n    function pauseGame() {\n      emit('onPauseGame')\n    }\n\n    function stopChangeColor() {\n      colorButtonStyle.value = props.isCanChangeColor === false\n        ? { height: '40px' }\n        : { filter: 'invert(0.6)', height: '40px' }\n      emit('onChangeColor')\n    }\n\n    return {\n      restartPage,\n      pauseGame,\n      colorButtonStyle,\n      stopChangeColor,\n    }\n  },\n})\n</script>\n\n<style>\n  @import \"control-button\"\n</style>\n","import { render } from \"./control-button.vue?vue&type=template&id=e87f7b56\"\nimport script from \"./control-button.vue?vue&type=script&lang=js\"\nexport * from \"./control-button.vue?vue&type=script&lang=js\"\n\nimport \"./control-button.vue?vue&type=style&index=0&id=e87f7b56&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"digital-tree__header\">\n    <div class=\"digital-tree__header-logo\">\n      <img\n        src=\"@/assets/vuejs-logo.svg\"\n        style=\"height: 32px; opacity: 0.5;\"\n        alt=\"Vue logo\"\n      >\n    </div>\n    <div class=\"digital-tree__header-text\">\n      Digital Trees\n    </div>\n    <div />\n  </div>\n</template>\n\n<style scoped>\n  @import 'cell-header';\n</style>\n","import { render } from \"./cell-header.vue?vue&type=template&id=3f5df9cd&scoped=true\"\nconst script = {}\n\nimport \"./cell-header.vue?vue&type=style&index=0&id=3f5df9cd&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3f5df9cd\"]])\n\nexport default __exports__","<template>\n  <div>\n    <div>\n      <div\n        class=\"block-counter__header\"\n      >\n        <p\n          class=\"block-counter__header-text\"\n          style=\"color: white\"\n        >\n          Tree count:  {{ digitalTrees.length }}\n        </p>\n      </div>\n    </div>\n    <div\n      v-for=\"(tree, index) in digitalTrees\"\n      :key=\"tree.id\"\n      class=\"cell-counter\"\n      @click=\"$emit('clicked', tree.lastCell.i, tree.lastCell.j)\"\n    >\n      <div\n        class=\"block-counter-head\"\n        :style=\"{background: tree.headColor}\"\n      >\n        <p\n          class=\"cellText\"\n          :style=\"{color: tree.headColor}\"\n        >\n          {{ index }}\n        </p>\n      </div>\n      <div\n        class=\"block-counter\"\n        :style=\"{background: tree.bodyColor}\"\n      >\n        <p\n          class=\"cellText\"\n          :style=\"{color: tree.bodyColor}\"\n        >\n          <!-- :style=\"{color: tree.color}\" -->\n          Energ:{{ tree.energy }}, +{{ tree.lastIncreaseEnergy }} / -{{ tree.lastReduceEnergy }} Cells: {{ tree.cells.length }}\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'CellCounter',\n  props: {\n    digitalTrees: {\n      type: Array,\n      default: () => [],\n    },\n  },\n}\n\n</script>\n\n<style scoped>\n  @import 'cell-counter';\n</style>\n\n","import { render } from \"./cell-counter.vue?vue&type=template&id=0db982a9&scoped=true\"\nimport script from \"./cell-counter.vue?vue&type=script&lang=js\"\nexport * from \"./cell-counter.vue?vue&type=script&lang=js\"\n\nimport \"./cell-counter.vue?vue&type=style&index=0&id=0db982a9&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db982a9\"]])\n\nexport default __exports__","<template>\n  <div class=\"blocks-field\">\n    <div\n      v-for=\"(cellRaw, index) in fieldCells\"\n      :key=\"index\"\n      class=\"testArray\"\n    >\n      <div\n        v-for=\"cell in cellRaw\"\n        :key=\"cell.id\"\n        class=\"testArray\"\n      >\n        <CellBlock\n          :cell-color=\"cell.color\"\n          :cell-type=\"cell.type\"\n          :cell-parent-tree-id=\"cell?.parentTree?.id\"\n          :cell-is-create-animation=\"cell?.isCreateAnimation\"\n          :cell-is-cell-animation=\"cell?.isCellAnimation\"\n          :choosen-tree-id=\"choosenTreeId\"\n          @click=\"$emit('clicked', cell.i, cell.j)\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CellBlock from '../cell-block'\n\nexport default {\n  name: 'CellsField',\n  components: {\n    CellBlock,\n  },\n  props: {\n    fieldCells: {\n      type: Array,\n      default: () => [],\n    },\n    choosenTreeId: {\n      type: String,\n      default: 'none',\n    },\n  },\n}\n</script>\n\n<style scoped>\n @import 'cells-field'\n</style>\n","<template>\n  <div\n    :class=\"classOptions\"\n    :style=\"styleOptions\"\n    @click=\"sayHello\"\n  >\n    <p\n      v-if=\"cellType==='cell'\"\n      :class=\"{cellText: true, }\"\n      :style=\"{color: cellColor}\"\n    >\n      <!-- {{cellObject.j}}-{{cellObject.i}} id:{{cellObject.parentTree.id}} -->\n    </p>\n  </div>\n</template>\n\n<script>\n\nimport { ref, computed, onMounted } from 'vue'\n\nexport default {\n  name: 'CellObject',\n  props: {\n    cellColor: {\n      type: String,\n      default: '#000000',\n    },\n    cellType: {\n      type: String,\n      default: '',\n    },\n    cellParentTreeId: {\n      type: String,\n      default: '',\n    },\n    cellIsCreateAnimation: {\n      type: Boolean,\n      default: false,\n    },\n    cellIsCellAnimation: {\n      type: Boolean,\n      default: false,\n    },\n    choosenTreeId: {\n      type: String,\n      default: 'none',\n    },\n  },\n\n  setup(props) {\n    const isField = ref('false')\n    const isCell = ref('false')\n    const isCellChoosed = computed(() => props.cellParentTreeId === props.choosenTreeId)\n    const classOptions = computed(() => {\n      return {\n        block: true,\n        create_block_animation: props.cellIsCreateAnimation,\n        change_size_animation: props.cellIsCellAnimation,\n        'block--choosed': isCellChoosed.value,\n      }\n    })\n    const styleOptions = computed(() => {\n      return {\n        background: props.cellColor,\n      }\n    })\n\n    isField.value = computed(() => props.cellType === 'field')\n    isCell.value = computed(() => props.cellType === 'cell')\n\n    function sayHello() {\n    }\n\n    return {\n      isCell,\n      isField,\n      classOptions,\n      styleOptions,\n      sayHello,\n    }\n  },\n}\n\n</script>\n\n<style scoped>\n  @import 'cell-block';\n</style>\n","import { render } from \"./cell-block.vue?vue&type=template&id=6bf33510&scoped=true\"\nimport script from \"./cell-block.vue?vue&type=script&lang=js\"\nexport * from \"./cell-block.vue?vue&type=script&lang=js\"\n\nimport \"./cell-block.vue?vue&type=style&index=0&id=6bf33510&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6bf33510\"]])\n\nexport default __exports__","import { render } from \"./cells-field.vue?vue&type=template&id=6d7e8e55&scoped=true\"\nimport script from \"./cells-field.vue?vue&type=script&lang=js\"\nexport * from \"./cells-field.vue?vue&type=script&lang=js\"\n\nimport \"./cells-field.vue?vue&type=style&index=0&id=6d7e8e55&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6d7e8e55\"]])\n\nexport default __exports__","<template>\n  <div class=\"digital-tree__counter_cycle\">\n    <div>\n      <div class=\"digital-tree__counter-title\">\n        All cycle\n      </div>\n      <div\n        id=\"counter-count\"\n        class=\"digital-tree__counter-count\"\n      >\n        {{ cycleCounter }}\n      </div>\n    </div>\n    <div>\n      <div class=\"digital-tree__counter-title\">\n        Full cycle\n      </div>\n      <div\n        id=\"counter-fullCircle-count\"\n        class=\"digital-tree__counter-count\"\n      >\n        {{ fullCycleCounter }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'CycleCounter',\n  props: {\n    cycleCounter: {\n      type: Number,\n    },\n    fullCycleCounter: {\n      type: Number,\n    },\n  },\n}\n</script>\n\n<style scoped>\n  @import 'cycle-counter'\n</style>\n","import { render } from \"./cycle-counter.vue?vue&type=template&id=21f67f74&scoped=true\"\nimport script from \"./cycle-counter.vue?vue&type=script&lang=js\"\nexport * from \"./cycle-counter.vue?vue&type=script&lang=js\"\n\nimport \"./cycle-counter.vue?vue&type=style&index=0&id=21f67f74&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-21f67f74\"]])\n\nexport default __exports__","<template>\n  <div class=\"digital-tree__log-box\">\n    <!-- <div class=\"digital-tree__field-left-title\">\n      Logbox\n    </div> -->\n    <div\n      class=\"digital-tree__logbox-title digital-tree__log-box-border\"\n      style=\"border-style: solid\"\n    >\n      <div\n        class=\"digital-tree__field-left-logbox-text\"\n        style=\"border: none\"\n      >\n        <div\n          class=\"digital-tree__field-left-logbox-td\"\n          style=\"width: 56px; margin-left: 0px;\"\n        >\n          Action\n        </div>\n        <div\n          class=\"digital-tree__field-left-logbox-td\"\n          style=\"width: 48px\"\n        >\n          Tree\n        </div>\n        <div\n          class=\"digital-tree__field-left-logbox-td\"\n          style=\"width: 48px\"\n        >\n          Raw\n        </div>\n        <div\n          class=\"digital-tree__field-left-logbox-td\"\n          style=\"width: 48px\"\n        >\n          Col.\n        </div>\n      </div>\n    </div>\n    <div\n      id=\"logbox\"\n      class=\"digital-tree__field-left-logbox \"\n    >\n      <div\n        v-for=\"(log, index) in logBoxArray.slice().reverse()\"\n        :key=\"index\"\n        class=\"digital-tree__field-left-logbox-text digital-tree__log-box-border\"\n      >\n        <tr>\n          <td\n            class=\"digital-tree__field-left-logbox-td\"\n            :style=\"{color: log.bodyColor, width: 64+'px'}\"\n          >\n            Create\n          </td>\n          <td\n            class=\"digital-tree__field-left-logbox-td\"\n            :style=\"{color: log.bodyColor, width: 48+'px'}\"\n          >\n            {{ log.id }}\n          </td>\n          <td\n            class=\"digital-tree__field-left-logbox-td\"\n            :style=\"{color: log.bodyColor, width: 48+'px'}\"\n          >\n            {{ log.i }}\n          </td>\n          <td\n            class=\"digital-tree__field-left-logbox-td\"\n            :style=\"{color: log.bodyColor, width: 48+'px'}\"\n          >\n            {{ log.j }}\n          </td>\n        </tr>\n        <!-- {{log}} -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'LogBox',\n  props: {\n    logBoxArray: {\n      type: Array,\n      default: () => [],\n      scrollToBottom() {\n        console.log('Hello')\n      },\n    },\n  },\n  // maby add this function in future bue need setup()\n  // function scrollToBottom() {\n  //   const container = this.$refs.logbox;\n  //   container.scrollTop = container.scrollHeight;\n  // }\n\n}\n</script>\n\n<style scoped>\n  @import 'log-box'\n</style>\n","import { render } from \"./log-box.vue?vue&type=template&id=171449da&scoped=true\"\nimport script from \"./log-box.vue?vue&type=script&lang=js\"\nexport * from \"./log-box.vue?vue&type=script&lang=js\"\n\nimport \"./log-box.vue?vue&type=style&index=0&id=171449da&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-171449da\"]])\n\nexport default __exports__","import { render } from \"./field-box.vue?vue&type=template&id=a1df11be\"\nimport script from \"./field-box.vue?vue&type=script&lang=js\"\nexport * from \"./field-box.vue?vue&type=script&lang=js\"\n\nimport \"./field-box.vue?vue&type=style&index=0&id=a1df11be&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=bf11fc5c\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=bf11fc5c&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/digital-trees-vue/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdigital_trees_vue\"] = self[\"webpackChunkdigital_trees_vue\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(127); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_fieldBox","class","_createElementVNode","id","_createElementBlock","_createVNode","_component_CellHeader","_component_CellsField","_ctx","parentTree","onClicked","_toDisplayString","type","i","j","color","isCellFalling","energy","cells","length","isFreeCellsAround","genome","_component_ControlButton","onOnPauseGame","onOnChangeColor","_component_CycleCounter","_hoisted_18","src","_imports_0","onClick","$event","placeholder","name","step","min","max","_hoisted_20","_hoisted_22","_hoisted_24","_component_CellCounter","BASIC_COLOR","TYPE_FIELD","TYPE_CELL","GENOME_COUNT","GENOME_MAX_VALUE","cellObject","constructor","fieldCells","this","indexInTree","nextCell","isCreateAnimation","isCellAnimation","setColor","setCellType","setFieldType","generatedEnergyByCell","countCellAbove","isCellAtUpperPoint","isCellAtLowerPoint","cellGeneratedEnergy","index","jForCheck","isCellExist","isUpperCellField","cellFalling","cellIsNotFalling","treeObject","digitalTrees","logTextArray","gererateGenome","headColor","generateRandomColor","bodyColor","generateID","counterCell","counterCellAll","lastCell","positionCurrent","positionNext","lastIncreaseEnergy","lastReduceEnergy","push","randomColor","Math","floor","random","toString","result","characters","charactersLength","charAt","addFirstCell","firstCell","randomCellFloor","refreshLastCell","createCellLog","error","console","log","addCellFromParent","cell","chooseRandomStartCell","whileCounter","getRandomInt","ceil","Array","fill","map","upGen","downGen","leftGen","rightGen","mutateGenome","chooseAction","moveCellDown","realiseGenome","refreshEnergy","forEach","cellGenome","newI","newJ","isNextCellField","createCellGenome","genomeToImplement","createCell","freeCellsArray","FreeCellsAround2","deleteTreeBody","FreeCellCoordinate","chooseRandomPoint","addNextCell","FreeCellsAround","freeFields","iEnd","jEnd","isCoordinateInField","freeCells","randomValue","logObject","shift","reset","changeRandomColor","isBottomCellField","keyToCopy","key","increaseEnergy","reduceEnergy","checkIsEnergyOver","isEnergyOver","allCellToField","deleteAllCells","createTreeFromHeadCell","filter","newTree","deleteEmptyTrees","treeIndex","findIndex","tree","splice","$props","style","$setup","props","isGamePaused","Boolean","isCanChangeColor","setup","emit","colorButtonStyle","ref","restartPage","location","reload","pauseGame","stopChangeColor","value","height","__exports__","alt","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","script","_Fragment","_renderList","background","default","cellRaw","_component_CellBlock","cellText","cellColor","String","cellType","cellParentTreeId","cellIsCreateAnimation","cellIsCellAnimation","choosenTreeId","isField","isCell","isCellChoosed","computed","classOptions","block","create_block_animation","change_size_animation","styleOptions","sayHello","components","CellBlock","cycleCounter","Number","fullCycleCounter","slice","reverse","width","logBoxArray","scrollToBottom","filedBox","ControlButton","CellHeader","CellCounter","CellsField","CycleCounter","LogBox","fieldWidth","fieldHeight","treeCount","timeRange","isGameStop","isGamePausedAtMoment","displayCell","isAnyTreesCanMove","sortedDigitalTrees","sort","a","b","createFieldObject","createFirstTrees","configBeforeStart","addFirstCellTrees","async","mainCycle","cycle","restart","sleep","time","chooseActionAtAllTree","timeEnd","logNewFullCycle","ms","Promise","resolve","setTimeout","badTreeCount","raw","cleanField","changeTreesColor","ChangeColor","addTree","deleteTree","pop","addColumn","deleteColumn","addRow","deleteRow","displayCellParam","handleDelay","watch","current","previous","onMounted","fieldBox","methods","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}