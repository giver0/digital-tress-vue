{"version":3,"file":"js/app.695a71b0.js","mappings":"oJACEA,EAAAA,EAAAA,IAAWC,G,uBCEJC,MAAM,wB,GACJA,MAAM,4B,SAOPA,MAAM,a,GAEDA,MAAM,mB,GAGNA,MAAM,mB,GAGNA,MAAM,mB,GAGNA,MAAM,mB,GAGNA,MAAM,mB,GAGNA,MAAM,mB,GAGNA,MAAM,mB,GAGNA,MAAM,mB,GAGNA,MAAM,mB,GAGNA,MAAM,mB,GAKVA,MAAM,yB,GAOJA,MAAM,yB,GAKJA,MAAM,6B,GACTC,EAAAA,EAAAA,GAAyD,OAApDD,MAAM,8BAA6B,eAAW,G,GAahDA,MAAM,6B,GACTC,EAAAA,EAAAA,GAAyD,OAApDD,MAAM,8BAA8B,cAAU,G,GAahDA,MAAM,6B,GACTC,EAAAA,EAAAA,GAAoD,OAA/CD,MAAM,8BAA6B,UAAM,G,GAY3CA,MAAM,6B,GACTC,EAAAA,EAAAA,GAAiD,OAA5CD,MAAM,8BAA6B,OAAG,G,GAa1CA,MAAM,wCAAwCE,GAAG,sB,mLA/G5DC,EAAAA,EAAAA,IAsIM,aArIJC,EAAAA,EAAAA,IAAcC,IACdJ,EAAAA,EAAAA,GAuHM,MAvHN,EAuHM,EAtHJA,EAAAA,EAAAA,GAwCM,MAxCN,EAwCM,EAvCJG,EAAAA,EAAAA,IAGEE,EAAA,CAFC,cAAaC,EAAAA,WACbC,UAASD,EAAAA,kBAFZ,oCAKQA,EAAAA,YAAYE,YAAYP,KAAAA,EAAAA,EAAAA,OADhCC,EAAAA,EAAAA,IAkCM,MAlCN,EAkCM,EA9BJF,EAAAA,EAAAA,GAEM,MAFN,EAA6B,YACpBS,EAAAA,EAAAA,IAAEH,EAAAA,YAAYI,MAAI,IAE3BV,EAAAA,EAAAA,GAEM,MAFN,EAA6B,SACvBS,EAAAA,EAAAA,IAAEH,EAAAA,YAAYK,GAAC,IAErBX,EAAAA,EAAAA,GAEM,MAFN,EAA6B,SACvBS,EAAAA,EAAAA,IAAEH,EAAAA,YAAYM,GAAC,IAErBZ,EAAAA,EAAAA,GAEM,MAFN,EAA6B,UACtBS,EAAAA,EAAAA,IAAEH,EAAAA,YAAYL,IAAE,IAEvBD,EAAAA,EAAAA,GAEM,MAFN,EAA6B,aACnBS,EAAAA,EAAAA,IAAEH,EAAAA,YAAYO,OAAK,IAE7Bb,EAAAA,EAAAA,GAEM,MAFN,EAA6B,mBACbS,EAAAA,EAAAA,IAAEH,EAAAA,YAAYQ,aAAW,IAEzCd,EAAAA,EAAAA,GAEM,MAFN,EAA6B,qBACXS,EAAAA,EAAAA,IAAEH,EAAAA,YAAYS,eAAa,IAE7Cf,EAAAA,EAAAA,GAEM,MAFN,EAA6B,kBACdS,EAAAA,EAAAA,IAAEH,EAAAA,YAAYE,YAAYP,IAAE,IAE3CD,EAAAA,EAAAA,GAEM,MAFN,EAA6B,yBACPS,EAAAA,EAAAA,IAAEH,EAAAA,YAAYE,YAAYQ,mBAAiB,IAEjEhB,EAAAA,EAAAA,GAEM,MAFN,GAEMS,EAAAA,EAAAA,IADFH,EAAAA,YAAYE,YAAYS,QAAM,OAhCpC,kBAoCFjB,EAAAA,EAAAA,GA4EM,MA5EN,EA4EM,EA3EJG,EAAAA,EAAAA,IAKEe,EAAA,CAJCC,cAAeb,EAAAA,UACfc,aAAgBd,EAAAA,aAChBe,iBAAoBf,EAAAA,iBACpBgB,gBAAiBhB,EAAAA,aAJpB,+EAMAN,EAAAA,EAAAA,GA2DM,MA3DN,EA2DM,EA1DJG,EAAAA,EAAAA,IAGEoB,EAAA,CAFCC,aAAclB,EAAAA,aACdmB,iBAAkBnB,EAAAA,kBAFrB,6CAIAN,EAAAA,EAAAA,GAaM,MAbN,EAaM,CAZJ0B,GAYI,SAXJ1B,EAAAA,EAAAA,GAUC,SATCU,KAAK,SACLT,GAAG,gB,qCACMK,EAAAA,UAASqB,GAClBC,YAAY,QACZC,KAAK,WACLC,KAAK,KACLC,IAAI,IACJC,IAAI,OACJjC,MAAM,sBATR,iBAGWO,EAAAA,gBASbN,EAAAA,EAAAA,GAaM,MAbN,EAaM,CAZJiC,GAYI,SAXJjC,EAAAA,EAAAA,GAUC,SATCU,KAAK,SACLT,GAAG,e,qCACMK,EAAAA,UAASqB,GAClBC,YAAY,aACZC,KAAK,WACLC,KAAK,IACLC,IAAI,IACJC,IAAI,KACJjC,MAAM,sBATR,iBAGWO,EAAAA,gBASbN,EAAAA,EAAAA,GAYM,MAZN,EAYM,CAXJkC,GAWI,SAVJlC,EAAAA,EAAAA,GASC,SARCU,KAAK,SACLT,GAAG,e,qCACMK,EAAAA,WAAUqB,GACnBC,YAAY,aACZC,KAAK,WACLC,KAAK,IACLC,IAAI,IACJhC,MAAM,sBARR,iBAGWO,EAAAA,iBAQbN,EAAAA,EAAAA,GAYM,MAZN,EAYM,CAXJmC,GAWI,SAVJnC,EAAAA,EAAAA,GASC,SARCU,KAAK,SACLT,GAAG,yB,qCACMK,EAAAA,YAAWqB,GACpBC,YAAY,aACZC,KAAK,WACLC,KAAK,IACLC,IAAI,IACJhC,MAAM,sBARR,iBAGWO,EAAAA,oBASfN,EAAAA,EAAAA,GAKM,MALN,EAKM,gBAJJE,EAAAA,EAAAA,IAGEkC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAFe/B,EAAAA,cAARgC,K,WADTzC,EAAAA,EAAAA,IAGE0C,EAAA,CAF8BC,IAAKF,EAAKrC,GACvCqC,KAAMA,GAFT,kCCjHH,MAAMG,EAAc,UACdC,EAAa,QACbC,EAAY,OAEZC,EAAe,GACfC,EAAmB,GCCjB,MAAMC,EACnBC,YAAYpC,EAAGC,EAAGoC,GAChBC,KAAKtC,EAAIA,EACTsC,KAAKrC,EAAIA,EACTqC,KAAKhD,GAAM,IAAGU,KAAKC,IACnBqC,KAAKnC,YAAc,KACnBmC,KAAKvC,KAAOgC,EACZO,KAAKpC,MAAQ4B,EACbQ,KAAKhC,OAAS,EACdgC,KAAKC,SAAW,KAChBD,KAAKzC,WAAa,KAClByC,KAAKE,mBAAoB,EACzBF,KAAKG,iBAAkB,EACvBH,KAAKlC,eAAgB,EACrBkC,KAAKD,WAAaA,EAGpBK,SAASxC,GACPoC,KAAKpC,MAAQA,EAGfyC,cACEL,KAAKvC,KAAOiC,EACZM,KAAKE,mBAAoB,EACzBF,KAAKG,iBAAkB,EAGzBG,eACEN,KAAKE,mBAAoB,EACzBF,KAAKE,mBAAoB,EACzBF,KAAKG,iBAAkB,EACvBH,KAAKvC,KAAOgC,EACZO,KAAKpC,MAAQ4B,EACbQ,KAAKnC,YAAc,KACnBmC,KAAKlC,eAAgB,EACrBkC,KAAKzC,WAAa,KAClByC,KAAKhC,OAAS,EACdgC,KAAKC,SAAW,KAGlBM,wBACE,MAAMC,EAAiB,EAEvB,GAAIR,KAAKlC,cACP,OAAO,EACF,CACL,MAAM2C,EAAgC,IAAXT,KAAKrC,EAChC,GAAI8C,EACF,OAAO,EAET,IAAIC,EAAsB,EAC1B,IAAK,IAAIC,EAAQ,EAAGA,EAAQH,EAAiB,EAAGG,IAAS,CACvD,MAAMC,EAAYZ,KAAKrC,EAAIgD,EACrBE,EAAcD,KAAaZ,KAAKD,YAAcC,KAAKtC,KAAKsC,KAAKD,WAAWa,GAC9E,IAAIC,EAUF,OADAF,EAAQH,EAAiB,EAClB,EAVQ,CACf,MAAMM,EAAmBd,KAAKD,WAAWa,GAAWZ,KAAKtC,IAAID,OAASgC,EACtE,IAAIqB,EAIF,OADAH,EAAQH,EAAiB,EAClBE,EAHPA,GAA4C,GAUlD,OAAOA,GAIXK,cACEf,KAAKlC,eAAgB,EAGvBkD,mBACEhB,KAAKlC,eAAgB,GC3EV,MAAMmD,EACnBnB,YACEoB,EACAnB,EACA/B,EAASgC,KAAKmB,iBACdC,EAAYpB,KAAKqB,sBACjBC,EAAYtB,KAAKqB,uBAEjBrB,KAAKkB,aAAeA,EACpBA,EAAaK,KAAKvB,MAClBA,KAAKD,WAAaA,EAClBC,KAAKhD,GAAKgD,KAAKwB,aACfxB,KAAKyB,MAAQ,GACbzB,KAAK0B,YAAc,EACnB1B,KAAK2B,eAAiB,EACtB3B,KAAK4B,SAAW,KAChB5B,KAAKjC,mBAAoB,EACzBiC,KAAKoB,UAAYA,EACjBpB,KAAKsB,UAAYA,EACjBtB,KAAK6B,gBAAkB,KACvB7B,KAAK8B,aAAe,KACpB9B,KAAK+B,OAAS,GACd/B,KAAKhC,OAASA,EAGhBqD,sBACE,IAAIW,EAAcxC,EAClB,MAAOwC,IAAgBxC,EACrBwC,EAAc,IACdA,GAAeC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,IAE/D,OAAOJ,EAGTR,aACE,MAAMa,EAAS,EACf,IAAIC,EAAS,GACb,MAAMC,EAAa,iEACbC,EAAmBD,EAAWF,OACpC,IAAK,IAAI3E,EAAI,EAAGA,EAAI2E,EAAQ3E,IAC1B4E,GAAUC,EAAWE,OAAOR,KAAKC,MAAMD,KAAKE,SAAWK,IAEzD,OAAOF,EAGTI,aAAaC,GACX,IACE,MAAMC,EAAY5C,KAAK6C,kBACvB7C,KAAKyB,MAAMF,KAAKqB,GAEhB5C,KAAKyB,MAAM,GAAGrB,SAASJ,KAAKoB,WAC5BpB,KAAKyB,MAAM,GAAGpB,cACdL,KAAKyB,MAAM,GAAGlE,WAAayC,KAC3BA,KAAKyB,MAAM,GAAG5D,YAAcmC,KAAKyB,MAAMY,OAAS,EAChDrC,KAAKyB,MAAM,GAAGzD,OAAS,EACvBgC,KAAK8C,kBACL9C,KAAK+C,cAAcJ,GACnB,MAAOK,GACPC,QAAQC,IAAI,oCACZD,QAAQC,IAAIF,IAIhBG,kBAAkBC,GAChBpD,KAAKyB,MAAMF,KAAK6B,GAChBpD,KAAK0B,YAAc,EACnB1B,KAAK2B,eAAiB,EACtB3B,KAAK8C,kBACL9C,KAAK4B,SAAS5D,OAAS,EACvBgC,KAAK4B,SAASrE,WAAayC,KAG7BqD,wBACE,IACI1F,EACAD,EAFA4F,EAAe,EAGnB,MAAOA,EAAetD,KAAKD,WAAWsC,OAASrC,KAAKD,WAAW,GAAGsC,OAAQ,CAMxE,GALA1E,EAAIqC,KAAKuD,aAAa,EAAGvD,KAAKD,WAAWsC,QACzC3E,EAAIsC,KAAKuD,aAAa,EAAGvD,KAAKD,WAAW,GAAGsC,QAE5CY,QAAQC,IAAI,8BAERlD,KAAKD,WAAWpC,GAAGD,GAAGE,QAAU4B,EAClC,OAAOQ,KAAKD,WAAWpC,GAAGD,GAE5B4F,GAAgB,GAIpBT,kBACE,IACIlF,EACAD,EAFA4F,EAAe,EAGnB,MAAOA,EAA2C,EAA5BtD,KAAKD,WAAW,GAAGsC,OAAY,CAMnD,GALA1E,EAAIqC,KAAKD,WAAWsC,OAAS,EAC7B3E,EAAIsC,KAAKuD,aAAa,EAAGvD,KAAKD,WAAW,GAAGsC,QAE5CY,QAAQC,IAAI,8BAERlD,KAAKD,WAAWpC,GAAGD,GAAGD,OAASgC,EACjC,OAAOO,KAAKD,WAAWpC,GAAGD,GAE5B4F,GAAgB,GAIpBC,aAAazE,EAAKC,GAGhB,OAFAD,EAAMmD,KAAKuB,KAAK1E,GAChBC,EAAMkD,KAAKC,MAAMnD,GACVkD,KAAKC,MAAMD,KAAKE,UAAYpD,EAAMD,IAAQA,EAGnDqC,iBACE,MAAMnD,EAAS,IAAIyF,MAAM9D,GAAc+D,KAAK,GAC3CC,KAAI,KACI,CACLC,MAAO5D,KAAKuD,aAAa,EAAG3D,GAC5BiE,QAAS7D,KAAKuD,aAAa,EAAG3D,GAC9BkE,QAAS9D,KAAKuD,aAAa,EAAG3D,GAC9BmE,SAAU/D,KAAKuD,aAAa,EAAG3D,OAInC,OADAqD,QAAQC,IAAI,SAAUlF,GACfA,EAGT8E,kBACE9C,KAAK4B,SAAW5B,KAAKyB,MAAMzB,KAAKyB,MAAMY,OAAS,GAGjD2B,aAAarB,GACP3C,KAAK4B,SAAS9D,cAEhBkC,KAAKiE,aAAatB,GAIlB3C,KAAKkE,cAAcvB,GAKrB3C,KAAKmE,gBAIPD,cAAcvB,GACZ3C,KAAKyB,MAAM2C,SAAQhB,IACjB,GAAIA,EAAKxF,QAAUoC,KAAKoB,UAAW,CACjC,MAAMiD,EAAarE,KAAKhC,OAAOoF,EAAKpF,QAMpC,IAAIsG,EAAO,KACPC,EAAO,KACPF,EAAWT,OAAS,KACtBU,EAAOlB,EAAK1F,EACZ6G,EAAOnB,EAAKzF,EAAI,EACZqC,KAAKwE,gBAAgBF,EAAMC,IAC7BvE,KAAKyE,iBAAiBrB,EAAMT,EAAc2B,EAAMC,EAAMF,EAAWT,QAGjES,EAAWR,SAAW,KACxBS,EAAOlB,EAAK1F,EACZ6G,EAAOnB,EAAKzF,EAAI,EACZqC,KAAKwE,gBAAgBF,EAAMC,IAC7BvE,KAAKyE,iBAAiBrB,EAAMT,EAAc2B,EAAMC,EAAMF,EAAWR,UAGjEQ,EAAWP,SAAW,KACxBQ,EAAOlB,EAAK1F,EAAI,EAChB6G,EAAOnB,EAAKzF,EACRqC,KAAKwE,gBAAgBF,EAAMC,IAC7BvE,KAAKyE,iBAAiBrB,EAAMT,EAAc2B,EAAMC,EAAMF,EAAWP,UAGjEO,EAAWN,UAAY,KACzBO,EAAOlB,EAAK1F,EAAI,EAChB6G,EAAOnB,EAAKzF,EACRqC,KAAKwE,gBAAgBF,EAAMC,IAC7BvE,KAAKyE,iBAAiBrB,EAAMT,EAAc2B,EAAMC,EAAMF,EAAWN,eAO3EU,iBAAiBrB,EAAMT,EAAc2B,EAAMC,EAAMG,GAE/CtB,EAAKhD,SAASJ,KAAKsB,WACnB,MAAMrB,EAAWD,KAAKD,WAAWwE,GAAMD,GACvCrE,EAASG,SAASJ,KAAKoB,WACvBnB,EAASI,cAETL,KAAK2B,eAAiB3B,KAAK2B,eAAiB,EAC5C3B,KAAK0B,YAAc1B,KAAK0B,YAAc,EACtCzB,EAASpC,YAAcmC,KAAK2B,eAC5B1B,EAASjC,OAAS0G,EAClBzE,EAAS1C,WAAayC,KACtBA,KAAKyB,MAAMF,KAAKtB,GAChBD,KAAK8C,kBACL9C,KAAK+C,cAAcJ,GAGrB6B,gBAAgBF,EAAMC,GACpB,OAAIA,KAAQvE,KAAKD,YAAcuE,KAAQtE,KAAKD,WAAWwE,IAC9CvE,KAAKD,WAAWwE,GAAMD,IAAO1G,QAAU4B,EAMlDmF,WAAWhC,GACT,MAAMiC,EAAiB5E,KAAK6E,iBAC1B7E,KAAK4B,UAIP,GAA8B,IAA1BgD,EAAevC,OACjBrC,KAAKjC,mBAAoB,EACzBiC,KAAK4B,SAAS9D,eAAgB,EAC1BkC,KAAK0B,YAAc,GACrB1B,KAAK8E,qBAEF,CACL,MAAMC,EAAqB/E,KAAKgF,kBAAkBJ,IAC3CjH,EAAGD,GAAKqH,EACf/E,KAAKiF,YAAYtH,EAAGD,EAAGiF,IAI3BuC,gBAAgB9B,GAGd,MAAM+B,EAAa,GACnB,IAAIzH,EAAI0F,EAAK1F,EAAI,EACbC,EAAIyF,EAAKzF,EAAI,EACjB,MAAMyH,EAAOhC,EAAK1F,EAAI,EAChB2H,EAAOjC,EAAKzF,EAAI,EAEtB,KAAOA,EAAI0H,EAAM1H,IACf,IAAKD,EAAI0F,EAAK1F,EAAI,EAAGA,EAAI0H,EAAM1H,IACzBsC,KAAKsF,oBAAoB5H,EAAGC,IAC1BqC,KAAKD,WAAWpC,GAAGD,GAAGE,QAAU4B,GAClC2F,EAAW5D,KAAK,CAAC5D,EAAGD,IAK5B,OAAOyH,EAGTN,iBAAiBzB,GAGf,MAAM+B,EAAa,GACnB,IAAIzH,EAAI0F,EAAK1F,EAAI,EACbC,EAAIyF,EAAKzF,EAAI,EACjB,MAAMyH,EAAOhC,EAAK1F,EAAI,EAChB2H,EAAOjC,EAAKzF,EAAI,EAGtB,IAAK,IAAIgD,EAAQhD,EAAGgD,EAAQ0E,EAAM1E,KAIlC,KAAOhD,EAAI0H,EAAM1H,IACf,IAAKD,EAAI0F,EAAK1F,EAAI,EAAGA,EAAI0H,EAAM1H,IACzBC,KAAKqC,KAAKD,YAAcrC,KAAKsC,KAAKD,WAAWpC,IAC3CqC,KAAKD,WAAWpC,GAAGD,GAAGD,OAASgC,GACjC0F,EAAW5D,KAAK,CAAC5D,EAAGD,IAK5B,OAAOyH,EAGTG,oBAAoB5H,EAAGC,GACrB,OAAOD,GAAK,GAAKA,EAAIsC,KAAKD,WAAW,GAAGsC,QAAU1E,GAAK,GAAKA,EAAIqC,KAAKD,WAAWsC,OAGlF2C,kBAAkBO,GAChB,MAAMC,EAAcxF,KAAKuD,aAAa,EAAGgC,EAAUlD,QACnD,OAAOkD,EAAUC,GAGnBP,YAAYtH,EAAGD,EAAGiF,GAEhB3C,KAAK4B,SAASxB,SAASJ,KAAKsB,WAC5B,MAAMrB,EAAWD,KAAKD,WAAWpC,GAAGD,GACpCuC,EAASG,SAASJ,KAAKoB,WACvBnB,EAASI,cAETL,KAAK2B,eAAiB3B,KAAK2B,eAAiB,EAC5C3B,KAAK0B,YAAc1B,KAAK0B,YAAc,EACtCzB,EAASpC,YAAcmC,KAAK2B,eAC5B1B,EAAS1C,WAAayC,KACtBA,KAAKyB,MAAMF,KAAKtB,GAChBD,KAAK8C,kBAEL9C,KAAK+C,cAAcJ,GAGrBI,cAAcJ,GAEZ,MAAM8C,EAAY,CAChB/H,EAAGsC,KAAK4B,SAASlE,EACjBC,EAAGqC,KAAK4B,SAASjE,EACjBX,GAAIgD,KAAKhD,GACTS,KAAM,SACN2D,UAAWpB,KAAKoB,UAChBE,UAAWtB,KAAKsB,WAElBqB,EAAapB,KAAKkE,GACd9C,EAAaN,OAAS,IACxBM,EAAa+C,QAIjBC,QACE3F,KAAKjC,mBAAoB,EACzBiC,KAAKyB,MAAQ,GACbzB,KAAK4B,SAAW,KAGlBgE,oBACE5F,KAAKoB,UAAYpB,KAAKqB,sBACtBrB,KAAKsB,UAAYtB,KAAKqB,sBAGxByD,iBAGE9E,KAAKyB,MAAM2C,SAAQhB,IACbA,EAAKxF,QAAUoC,KAAKsB,WACtB8B,EAAK9C,kBAGTN,KAAKyB,MAAQzB,KAAKyB,MAAMoE,QAAOzC,GAAQA,EAAKxF,QAAUoC,KAAKoB,YAE3DpB,KAAKyB,MAAM2C,SAAQhB,GAAQA,EAAKrC,gBAEhCf,KAAK0B,YAAc,EAGrBuC,aAAatB,GAGX,GAAI3C,KAAK4B,SAASjE,IAAMqC,KAAKD,WAAWsC,OAAS,EAE/CrC,KAAK4B,SAAS9D,eAAgB,EAC9BkC,KAAK4B,SAAS7D,mBAAoB,EAClCiC,KAAKkE,cAAcvB,OACd,CAGL3C,KAAK6B,gBAAkB7B,KAAK4B,SAC5B5B,KAAK8B,aAAe9B,KAAKD,WAAWC,KAAK6B,gBAAgBlE,EAAI,GAAGqC,KAAK6B,gBAAgBnE,GAErF,MAAMoI,EAAoB9F,KAAK8B,aAAarE,OAASgC,EAErD,GAAIqG,EAAmB,CAIrB,MAAMC,EAAY,CAChB,OACA,QACA,aACA,gBACA,eAGFA,EAAU3B,SAAQ7E,IAChBS,KAAK8B,aAAavC,GAAOS,KAAK6B,gBAAgBtC,MAGhDS,KAAK4B,SAAW5B,KAAK8B,aACrB9B,KAAKyB,MAAM,GAAKzB,KAAK8B,aACrB9B,KAAK6B,gBAAgBvB,iBAK3B6D,gBAEEnE,KAAKgG,iBAGLhG,KAAKiG,eAGLjG,KAAKkG,oBAIPF,iBACEhG,KAAKyB,MAAM2C,SAAQhB,IACjB,MAAM7C,EAAwB6C,EAAK7C,wBAC/BA,IACFP,KAAK+B,OAAS/B,KAAK+B,OAASqB,EAAK7C,4BAKvC0F,eACEjG,KAAK+B,OAAS/B,KAAK+B,OAAS/B,KAAKyB,MAAMY,OAGzC6D,oBACE,MAAMC,EAAenG,KAAK+B,OAAS,EAC/BoE,IACFnG,KAAK8E,iBACD9E,KAAKyB,MAAMY,OAAS,GACtBrC,KAAKoG,yBAEHpG,KAAKyB,MAAMY,QAAU,GACvBrC,KAAKqG,iBAEPrG,KAAKsG,oBAITF,yBACEpG,KAAKyB,MAAM2C,SAAQhB,IACjB,MAAMmD,EAAU,IAAItF,EAClBjB,KAAKkB,aACLlB,KAAKD,WACLC,KAAKhC,OACLgC,KAAKoB,UACLpB,KAAKsB,WAEPiF,EAAQpD,kBAAkBC,MAI9BiD,iBACErG,KAAKyB,MAAM2C,SAAQhB,GAAQA,EAAK9C,iBAChCN,KAAKyB,MAAQ,GAGf6E,mBACI,MAAME,EAAYxG,KAAKkB,aAAauF,WAAUpH,GAA8B,IAAtBA,EAAKoC,MAAMY,UAC9C,IAAfmE,GACFxG,KAAKkB,aAAawF,OAAOF,EAAW,I,uBCrcrC1J,MAAM,gC,0CAAXG,EAAAA,EAAAA,IA+BM,MA/BN,EA+BM,EA7BgB,IAAZ0J,EAAAA,eAAY,WADpB1J,EAAAA,EAAAA,IAOE,O,MALA2J,IAAI,wIACJ9J,MAAM,0CACN+J,MAAA,gBACA7J,GAAG,2BACF8J,QAAK,oBAAEC,EAAAA,WAAAA,EAAAA,aAAAA,SANV,WAQA9J,EAAAA,EAAAA,IAOE,O,MALA2J,IAAI,uIACJ9J,MAAM,0CACN+J,MAAA,gBACA7J,GAAG,2BACF8J,QAAK,oBAAEC,EAAAA,WAAAA,EAAAA,aAAAA,QAEVhK,EAAAA,EAAAA,GAME,OALA6J,IAAI,0DACJ9J,MAAM,0CACNE,GAAG,6BACH6J,MAAA,gBACCC,QAAK,oBAAEC,EAAAA,aAAAA,EAAAA,eAAAA,OAEVhK,EAAAA,EAAAA,GAME,OALA6J,IAAAI,EACAlK,MAAM,0CACNE,GAAG,2BACF6J,OAAK,QAAEE,EAAAA,kBACPD,QAAK,oBAAEC,EAAAA,iBAAAA,EAAAA,mBAAAA,KALV,U,cAcJ,GACEnI,KAAM,gBACNqI,MAAO,CACL9I,aAAc,CACZV,KAAMyJ,SAER9I,iBAAkB,CAChBX,KAAMyJ,UAGVC,MAAMF,GAAO,KAAEG,IACb,MAAMC,GAAmBC,EAAAA,EAAAA,IAAI,IAE7B,SAASC,IACPC,SAASC,SAGX,SAASC,IACPN,EAAK,eAGP,SAASO,IACPN,EAAiBO,OAAmC,IAA3BX,EAAM7I,iBAC3B,CAAEyJ,OAAQ,QACV,CAAEhC,OAAQ,cAAegC,OAAQ,QACrCT,EAAK,iBAGP,MAAO,CACLG,YAAAA,EACAG,UAAAA,EACAL,iBAAAA,EACAM,gBAAAA,K,QChEN,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,yECROhL,MAAM,wB,UACTC,EAAAA,EAAAA,GAMM,OANDD,MAAM,6BAA2B,EACpCC,EAAAA,EAAAA,GAIC,OAHC6J,IAAAI,EACAH,MAAA,8BACAkB,IAAI,eAJR,K,UAOAhL,EAAAA,EAAAA,GAEM,OAFDD,MAAM,6BAA4B,mBAEvC,K,UACAC,EAAAA,EAAAA,GACM,sB,GAXNiL,EAOAC,EAGAC,G,mCAXFjL,EAAAA,EAAAA,IAaM,MAbN,EAaMkL,GCbR,MAAMC,GAAS,GAKT,IAA2B,OAAgBA,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,U,UCPOtL,MAAM,gB,2CAAXG,EAAAA,EAAAA,IAkBM,MAlBN,GAkBM,EAjBJF,EAAAA,EAAAA,GAIM,OAHJD,MAAM,qBACL+J,OAAK,SAAAwB,WAAe1B,EAAAA,KAAKvF,aAF5B,SAKArE,EAAAA,EAAAA,GAWM,OAVJD,MAAM,gBACL+J,OAAK,SAAAwB,WAAe1B,EAAAA,KAAKrF,aAF5B,EAIEvE,EAAAA,EAAAA,GAMI,KALFD,MAAM,WACL+J,OAAK,SAAAjJ,MAAU+I,EAAAA,KAAKrF,aAEgB,WAC/B9D,EAAAA,EAAAA,IAAEmJ,EAAAA,KAAK5E,QAAQ,aAASvE,EAAAA,EAAAA,IAAEmJ,EAAAA,KAAKlF,MAAMY,QAAM,IATrD,KAiBJ,QACEzD,KAAM,cACNqI,MAAO,CACL5H,KAAM,CACJ5B,KAAM6K,UCrBZ,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,U,UCROxL,MAAM,gB,yEAAXG,EAAAA,EAAAA,IAiBM,MAjBN,GAiBM,gBAhBJA,EAAAA,EAAAA,IAeMkC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAduBuH,EAAAA,YAAU,CAA7B4B,EAAS5H,M,WADnB1D,EAAAA,EAAAA,IAeM,OAbHsC,IAAKoB,EACN7D,MAAM,aAHR,gBAKEG,EAAAA,EAAAA,IASMkC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IARWmJ,GAARnF,K,WADTnG,EAAAA,EAAAA,IASM,OAPHsC,IAAK6D,EAAKpG,GACXF,MAAM,aAHR,EAKEI,EAAAA,EAAAA,IAGEsL,EAAA,CAFC3I,WAAYuD,EACZ0D,QAAK,GAAEzJ,EAAAA,MAAK,UAAY+F,EAAK1F,EAAG0F,EAAKzF,IAFxC,sCALF,WALF,Q,2CCDFV,EAAAA,EAAAA,IAoBM,OApBAH,OAAK,S,gCAA2D6J,EAAAA,WAAWzG,kB,sBAAmDyG,EAAAA,WAAWxG,kBAKzI0G,OAAK,SAAAwB,WAAe1B,EAAAA,WAAW/I,SALrC,CAQyB,SAAf+I,EAAAA,WAAWlJ,OAAI,WADvBR,EAAAA,EAAAA,IAYI,K,MAVDH,OAAK,QAAE,CAAA2L,UAAAA,IACP5B,OAAK,SAAAjJ,MAAU+I,EAAAA,WAAW/I,SAH7B,0BAPF,GA2BF,QACEgB,KAAM,aACNqI,MAAO,CACLpH,WAAY,CACVpC,KAAM6K,SAIVnB,MAAMF,GACJ,MAAMyB,GAAUpB,EAAAA,EAAAA,IAAI,SACdqB,GAASrB,EAAAA,EAAAA,IAAI,SAKnB,OAHAoB,EAAQd,OAAQgB,EAAAA,EAAAA,KAAS,IAAgC,UAA1B3B,EAAMpH,WAAWpC,OAChDkL,EAAOf,OAAQgB,EAAAA,EAAAA,KAAS,IAAgC,SAA1B3B,EAAMpH,WAAWpC,OAExC,CACLiL,QAAAA,EACAC,OAAAA,KCtCN,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UFeA,IACE/J,KAAM,aACNiK,WAAY,CACVC,UAAAA,IAEF7B,MAAO,CACLlH,WAAY,CACVtC,KAAMgG,SGxBZ,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,U,iECRO3G,MAAM,+B,YAEPC,EAAAA,EAAAA,GAEM,OAFDD,MAAM,+BAA8B,eAEzC,K,IACKA,MAAM,8BAA8BE,GAAG,iB,YAK5CD,EAAAA,EAAAA,GAEM,OAFDD,MAAM,+BAA8B,gBAEzC,K,IACKA,MAAM,8BAA8BE,GAAG,4B,2CAbhDC,EAAAA,EAAAA,IAiBM,MAjBN,GAiBM,EAhBJF,EAAAA,EAAAA,GAOM,YANJiL,IAGAjL,EAAAA,EAAAA,GAEM,MAFN,IAEMS,EAAAA,EAAAA,IADDmJ,EAAAA,cAAY,MAGnB5J,EAAAA,EAAAA,GAOM,YANJmL,IAGAnL,EAAAA,EAAAA,GAEM,MAFN,IAEMS,EAAAA,EAAAA,IADDmJ,EAAAA,kBAAgB,OAQ3B,QACE/H,KAAM,eACNqI,MAAO,CACL1I,aAAc,CACZd,KAAMsL,QAERvK,iBAAkB,CAChBf,KAAMsL,UCvBZ,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,U,UCROjM,MAAM,yB,2nBAoCJA,MAAM,kCAAmCE,GAAG,U,2CApCnDC,EAAAA,EAAAA,IAuEM,MAvEN,GAuEM,CAnEJ+K,IAgCAjL,EAAAA,EAAAA,GAkCM,MAlCN,GAkCM,gBAjCJE,EAAAA,EAAAA,IAgCMkC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IA/BmBuH,EAAAA,YAAYqC,QAAQC,WAAO,CAA1C/F,EAAKvC,M,WADf1D,EAAAA,EAAAA,IAgCM,OA9BHsC,IAAKoB,EACN7D,MAAM,qEAHR,EAKEC,EAAAA,EAAAA,GAyBK,YAxBHA,EAAAA,EAAAA,GAKK,MAJHD,MAAM,qCACL+J,OAAK,SAAAjJ,MAAUsF,EAAI5B,UAAS4H,MAAAA,UAC9B,WAED,IACAnM,EAAAA,EAAAA,GAKK,MAJHD,MAAM,qCACL+J,OAAK,SAAAjJ,MAAUsF,EAAI5B,UAAS4H,MAAAA,WAF/B,QAIIhG,EAAIlG,IAAE,IAEVD,EAAAA,EAAAA,GAKK,MAJHD,MAAM,qCACL+J,OAAK,SAAAjJ,MAAUsF,EAAI5B,UAAS4H,MAAAA,WAF/B,QAIIhG,EAAIxF,GAAC,IAETX,EAAAA,EAAAA,GAKK,MAJHD,MAAM,qCACL+J,OAAK,SAAAjJ,MAAUsF,EAAI5B,UAAS4H,MAAAA,WAF/B,QAIIhG,EAAIvF,GAAC,UA5Bb,UAuCN,QACEiB,KAAM,SACNqI,MAAO,CACLkC,YAAa,CACX1L,KAAMgG,MACN2F,iBACEnG,QAAQC,IAAI,aC5EpB,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UjB6IA,MAAMmG,GAAW,CACfzK,KAAM,WACNiK,WAAY,CACVS,cADU,EAEVC,WAFU,GAGVC,YAHU,GAIVC,WAJU,GAKVC,aALU,GAMVC,OAAAA,IAEFxC,QACE,MAAMxE,GAAe2E,EAAAA,EAAAA,IAAI,IACnBsC,GAAatC,EAAAA,EAAAA,IAAI,IACjBuC,GAAcvC,EAAAA,EAAAA,IAAI,IAClBpG,GAAeoG,EAAAA,EAAAA,IAAI,IACnBwC,GAAYxC,EAAAA,EAAAA,IAAI,GAChBvH,GAAauH,EAAAA,EAAAA,IAAI,IAAI7D,MAAMoG,EAAYjC,OAAOlE,KAAK,GACtDC,KAAI,IAAM,IAAIF,MAAMmG,EAAWhC,UAE5BmC,GAAYzC,EAAAA,EAAAA,IAAI,KAEhB/I,GAAe+I,EAAAA,EAAAA,IAAI,GACnB9I,GAAmB8I,EAAAA,EAAAA,IAAI,GAEvB0C,GAAa1C,EAAAA,EAAAA,KAAI,GACjBnJ,GAAemJ,EAAAA,EAAAA,KAAI,GACnB2C,GAAuB3C,EAAAA,EAAAA,KAAI,GAC3BlJ,GAAmBkJ,EAAAA,EAAAA,KAAI,GACvB4C,GAAc5C,EAAAA,EAAAA,IAAI,IAQlB6C,GAAoBvB,EAAAA,EAAAA,KAAS,KAC1B,IA2BT,SAASwB,IACP,IAAK,IAAIzM,EAAI,EAAGA,EAAIoC,EAAW6H,MAAMvF,OAAQ1E,IAC3C,IAAK,IAAID,EAAI,EAAGA,EAAIqC,EAAW6H,MAAMjK,GAAG0E,OAAQ3E,IAC9CqC,EAAW6H,MAAMjK,GAAGD,GAAK,IAAImC,EAC3BnC,EACAC,EACAoC,EAAW6H,OAMnB,SAASyC,IACP,IAAK,IAAI7D,EAAY,EAAGA,EAAYsD,EAAUlC,MAAOpB,IACnD,IAAIvF,EAAWC,EAAa0G,MAAO7H,EAAW6H,OAIlD,SAAS0C,IACPrH,QAAQC,IAAI,aACZqH,IAGF,SAASA,IACP,IAAK,MAAMlL,KAAQ6B,EAAa0G,MAC9BvI,EAAKqD,aACHC,EAAaiF,OAKnB4C,eAAeC,IACb,OAA4B,IAArBT,EAAWpC,OACW,IAAvBzJ,EAAayJ,aACT8C,KAEmB,IAAvBvM,EAAayJ,MACf+C,UAEMC,EAAM,KAKlBJ,eAAeE,IACb,MAAOP,EAAkBvC,MAAO,CAO9B,GANA3E,QAAQ4H,KAAK,oBACPD,EAAMb,EAAUnC,OAEtBkD,IAEAvM,EAAaqJ,OAAS,EAClBzJ,EAAayJ,MAEf,YADAqC,EAAqBrC,OAAQ,GAG/B3E,QAAQ8H,QAAQ,cAElBvM,EAAiBoJ,OAAS,EAC1BoD,IAGF,SAASJ,EAAMK,GACb,OAAO,IAAIC,SAASC,IAClBC,WAAWD,EAASF,MAIxBT,eAAeM,IACb,IAAK,MAAMzL,KAAQ6B,EAAa0G,YACxBvI,EAAK2E,aACTrB,EAAaiF,OAanB,SAASoD,IACPrI,EAAaiF,MAAMrG,KAAK,iCAG1B,SAASoJ,IACPU,IACApI,QAAQC,IAAI,cAEZ,IAAK,MAAM7D,KAAQ6B,EAAa0G,MAC9BvI,EAAKsG,QAGHvH,EAAiBwJ,OACnB0D,IAGFhB,IACArH,QAAQC,IAAI,UAGd,SAASmI,IACP,IAAK,MAAME,KAAOxL,EAAW6H,MAC3B,IAAK,MAAMxE,KAAQmI,EACjBnI,EAAK9C,eAKX,SAASgL,IACP,IAAK,MAAMjM,KAAQ6B,EAAa0G,MAC9BvI,EAAKuG,oBAIT,SAAS8B,IACPvJ,EAAayJ,OAASzJ,EAAayJ,OACR,IAAvBzJ,EAAayJ,QAEfqC,EAAqBrC,OAAQ,GAIjC,SAAS4D,IACPpN,EAAiBwJ,OAAmC,IAA3BxJ,EAAiBwJ,MAG5C4C,eAAeiB,IACb,OAAsC,IAA/BxB,EAAqBrC,YACpBgD,EAAM,KAEd3H,QAAQC,IAAI,cACZ,IAAIjC,EAAWC,EAAa0G,OAC5B1G,EAAa0G,MAAM1G,EAAa0G,MAAMvF,OAAS,GAAGK,aAChDC,EAAaiF,aAETF,IAGR8C,eAAekB,IACb,OAAsC,IAA/BzB,EAAqBrC,YACpBgD,EAAM,KAEd,IAAK,MAAMxH,KAAQlC,EAAa0G,MAAM1G,EAAa0G,MAAMvF,OAAS,GAAGZ,MACnE2B,EAAK9C,qBACCsK,EAAM,KAEd1J,EAAa0G,MAAM+D,YACbjE,IAGR,SAASkE,IACP,IAAK,IAAIjO,EAAI,EAAGA,EAAIoC,EAAW6H,MAAMvF,OAAQ1E,IAC3CoC,EAAW6H,MAAMjK,GAAG4D,KAClB,IAAI1B,EACFE,EAAW6H,MAAMjK,GAAG0E,OACpB1E,EACAoC,EAAW6H,QAMnB,SAASiE,IACP,IAAK,IAAIlO,EAAI,EAAGA,EAAIoC,EAAW6H,MAAMvF,OAAQ1E,IAC3CoC,EAAW6H,MAAMjK,GAAGgO,MAIxB,SAASG,IACP/L,EAAW6H,MAAMrG,KAAK,IACtB,IAAK,IAAI7D,EAAI,EAAGA,EAAIqC,EAAW6H,MAAM,GAAGvF,OAAQ3E,IAC9CqC,EAAW6H,MAAM7H,EAAW6H,MAAMvF,OAAS,GAAGd,KAC5C,IAAI1B,EACFnC,EACAqC,EAAW6H,MAAMvF,OAAS,EAC1BtC,EAAW6H,QAMnB,SAASmE,IACPhM,EAAW6H,MAAM+D,MAGnB,SAASK,EAAiBtO,EAAGC,GAC3BsF,QAAQC,IAAI,eAAgBxF,EAAGC,GAC/BsF,QAAQC,IAAK,eAAexF,EAAG,IAAKC,EAAGoC,EAAW6H,MAAMjK,GAAGD,IAC3DwM,EAAYtC,MAAQ7H,EAAW6H,MAAMjK,GAAGD,GAI1C,OA5NAuO,EAAAA,EAAAA,KAAM,IAAMnC,EAAUlC,QAAO4C,MAAO0B,EAASC,KAC3ChO,EAAayJ,OAAQ,EACrBsE,EAAUC,QAAiBV,UAAkBC,QAG/CO,EAAAA,EAAAA,KAAM,IAAMrC,EAAWhC,QAAO,CAACsE,EAASC,KACtCD,EAAUC,EAAWP,IAAcC,QAGrCI,EAAAA,EAAAA,KAAM,IAAMpC,EAAYjC,QAAO,CAACsE,EAASC,KACvCD,EAAUC,EAAWL,IAAWC,OAGlC9I,QAAQC,IAAI,oBACZkH,IACAC,KAEA+B,EAAAA,EAAAA,KAAU,KACRnJ,QAAQC,IAAI,cACZoH,IACArH,QAAQC,IAAI,gCACZuH,OAuMK,CACLX,UAAAA,EACAC,UAAAA,EACAH,WAAAA,EACA7J,WAAAA,EACA8J,YAAAA,EACAK,YAAAA,EACAvH,aAAAA,EACApE,aAAAA,EACA2C,aAAAA,EACA/C,aAAAA,EACAC,iBAAAA,EACAI,iBAAAA,EACAkJ,UAAAA,EACA8D,YAAAA,EACAQ,iBAAAA,KAIN,UkBtaA,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,KAEpE,UnBFA,IACEpN,KAAM,MACNiK,WAAY,CACVwD,SAAAA,IAEFC,QAAS,IoBLX,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAASC,KAEpE,WCNAC,EAAAA,EAAAA,IAAUC,IAAKC,MAAM,S,oJCFjBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,QAIfJ,EAAoBO,EAAID,E,WCzBxB,IAAIE,EAAW,GACfR,EAAoBS,EAAI,SAAS/K,EAAQgL,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,EAAAA,EACnB,IAAShQ,EAAI,EAAGA,EAAI0P,EAAS/K,OAAQ3E,IAAK,CACrC4P,EAAWF,EAAS1P,GAAG,GACvB6P,EAAKH,EAAS1P,GAAG,GACjB8P,EAAWJ,EAAS1P,GAAG,GAE3B,IAJA,IAGIiQ,GAAY,EACPhQ,EAAI,EAAGA,EAAI2P,EAASjL,OAAQ1E,MACpB,EAAX6P,GAAsBC,GAAgBD,IAAalF,OAAOsF,KAAKhB,EAAoBS,GAAGQ,OAAM,SAAStO,GAAO,OAAOqN,EAAoBS,EAAE9N,GAAK+N,EAAS3P,OAC3J2P,EAAS5G,OAAO/I,IAAK,IAErBgQ,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbP,EAAS1G,OAAOhJ,IAAK,GACrB,IAAIoQ,EAAIP,SACER,IAANe,IAAiBxL,EAASwL,IAGhC,OAAOxL,EAzBNkL,EAAWA,GAAY,EACvB,IAAI,IAAI9P,EAAI0P,EAAS/K,OAAQ3E,EAAI,GAAK0P,EAAS1P,EAAI,GAAG,GAAK8P,EAAU9P,IAAK0P,EAAS1P,GAAK0P,EAAS1P,EAAI,GACrG0P,EAAS1P,GAAK,CAAC4P,EAAUC,EAAIC,I,cCJ/BZ,EAAoBmB,EAAI,SAASd,GAChC,IAAIe,EAASf,GAAUA,EAAOgB,WAC7B,WAAa,OAAOhB,EAAO,YAC3B,WAAa,OAAOA,GAErB,OADAL,EAAoBsB,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,G,cCLRpB,EAAoBsB,EAAI,SAASlB,EAASoB,GACzC,IAAI,IAAI7O,KAAO6O,EACXxB,EAAoByB,EAAED,EAAY7O,KAASqN,EAAoByB,EAAErB,EAASzN,IAC5E+I,OAAOgG,eAAetB,EAASzN,EAAK,CAAEgP,YAAY,EAAMC,IAAKJ,EAAW7O,M,cCJ3EqN,EAAoB6B,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO1O,MAAQ,IAAI2O,SAAS,cAAb,GACd,MAAOC,GACR,GAAsB,kBAAXC,OAAqB,OAAOA,QALjB,G,cCAxBjC,EAAoByB,EAAI,SAASS,EAAKC,GAAQ,OAAOzG,OAAO0G,UAAUC,eAAeC,KAAKJ,EAAKC,I,cCA/FnC,EAAoBuC,EAAI,sB,cCKxB,IAAIC,EAAkB,CACrB,IAAK,GAaNxC,EAAoBS,EAAE1P,EAAI,SAAS0R,GAAW,OAAoC,IAA7BD,EAAgBC,IAGrE,IAAIC,EAAuB,SAASC,EAA4BC,GAC/D,IAKI3C,EAAUwC,EALV/B,EAAWkC,EAAK,GAChBC,EAAcD,EAAK,GACnBE,EAAUF,EAAK,GAGI9R,EAAI,EAC3B,GAAG4P,EAASqC,MAAK,SAAS3S,GAAM,OAA+B,IAAxBoS,EAAgBpS,MAAe,CACrE,IAAI6P,KAAY4C,EACZ7C,EAAoByB,EAAEoB,EAAa5C,KACrCD,EAAoBO,EAAEN,GAAY4C,EAAY5C,IAGhD,GAAG6C,EAAS,IAAIpN,EAASoN,EAAQ9C,GAGlC,IADG2C,GAA4BA,EAA2BC,GACrD9R,EAAI4P,EAASjL,OAAQ3E,IACzB2R,EAAU/B,EAAS5P,GAChBkP,EAAoByB,EAAEe,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOzC,EAAoBS,EAAE/K,IAG1BsN,EAAqBC,KAAK,iCAAmCA,KAAK,kCAAoC,GAC1GD,EAAmBxL,QAAQkL,EAAqBQ,KAAK,KAAM,IAC3DF,EAAmBrO,KAAO+N,EAAqBQ,KAAK,KAAMF,EAAmBrO,KAAKuO,KAAKF,I,GC/CvF,IAAIG,EAAsBnD,EAAoBS,OAAEN,EAAW,CAAC,MAAM,WAAa,OAAOH,EAAoB,SAC1GmD,EAAsBnD,EAAoBS,EAAE0C,I","sources":["webpack://digital-trees-vue/./src/App.vue","webpack://digital-trees-vue/./src/components/field-box/field-box.vue","webpack://digital-trees-vue/./src/constant/basic.js","webpack://digital-trees-vue/./src/components/classes/cellObject.js","webpack://digital-trees-vue/./src/components/classes/treeObject.js","webpack://digital-trees-vue/./src/components/control-button/control-button.vue","webpack://digital-trees-vue/./src/components/control-button/control-button.vue?838d","webpack://digital-trees-vue/./src/components/cell-header/cell-header.vue","webpack://digital-trees-vue/./src/components/cell-header/cell-header.vue?1323","webpack://digital-trees-vue/./src/components/cell-counter/cell-counter.vue","webpack://digital-trees-vue/./src/components/cell-counter/cell-counter.vue?8cd2","webpack://digital-trees-vue/./src/components/cells-field/cells-field.vue","webpack://digital-trees-vue/./src/components/cell-block/cell-block.vue","webpack://digital-trees-vue/./src/components/cell-block/cell-block.vue?dc6c","webpack://digital-trees-vue/./src/components/cells-field/cells-field.vue?dbec","webpack://digital-trees-vue/./src/components/cycle-counter/cycle-counter.vue","webpack://digital-trees-vue/./src/components/cycle-counter/cycle-counter.vue?d916","webpack://digital-trees-vue/./src/components/log-box/log-box.vue","webpack://digital-trees-vue/./src/components/log-box/log-box.vue?20cb","webpack://digital-trees-vue/./src/components/field-box/field-box.vue?d118","webpack://digital-trees-vue/./src/App.vue?7ccd","webpack://digital-trees-vue/./src/main.js","webpack://digital-trees-vue/webpack/bootstrap","webpack://digital-trees-vue/webpack/runtime/chunk loaded","webpack://digital-trees-vue/webpack/runtime/compat get default export","webpack://digital-trees-vue/webpack/runtime/define property getters","webpack://digital-trees-vue/webpack/runtime/global","webpack://digital-trees-vue/webpack/runtime/hasOwnProperty shorthand","webpack://digital-trees-vue/webpack/runtime/publicPath","webpack://digital-trees-vue/webpack/runtime/jsonp chunk loading","webpack://digital-trees-vue/webpack/startup"],"sourcesContent":["<template>\n  <fieldBox/>\n</template>\n\n<script>\nimport fieldBox from './components/field-box'\n\nexport default {\n  name: 'App',\n  components: {\n    fieldBox,\n  },\n  methods: {\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nbody{\n  margin: 0px;\n  padding: 0px;\n}\n\n@font-face {\n  font-family: subwayTicker;\n  src: url(@/fonts/SUBWT___.ttf);\n}\n</style>\n","<template>\n  <div>\n    <CellHeader />\n    <div class=\"digital-tree__layout\">\n      <div class=\"digital-tree__main-layer\">\n        <CellsField\n          :field-cells=\"fieldCells\"\n          @clicked=\"displayCellParam\"\n        />\n        <div\n          v-if=\"displayCell.parentTree?.id\"\n          class=\"tree-info\"\n        >\n          <div class=\"tree-info__item\">\n            type - {{displayCell.type}}\n          </div>\n          <div class=\"tree-info__item\">\n            i - {{displayCell.i}}\n          </div>\n          <div class=\"tree-info__item\">\n            j - {{displayCell.j}}\n          </div>\n          <div class=\"tree-info__item\">\n            id - {{displayCell.id}}\n          </div>\n          <div class=\"tree-info__item\">\n            color - {{displayCell.color}}\n          </div>\n          <div class=\"tree-info__item\">\n            indexInTree - {{displayCell.indexInTree}}\n          </div>\n          <div class=\"tree-info__item\">\n            isCellFalling - {{displayCell.isCellFalling}}\n          </div>\n          <div class=\"tree-info__item\">\n            parentTree - {{displayCell.parentTree?.id}}\n          </div>\n          <div class=\"tree-info__item\">\n            isFreeCellsAround - {{displayCell.parentTree?.isFreeCellsAround}}\n          </div>\n          <div class=\"tree-info__item\">\n            {{displayCell.parentTree?.genome}}\n          </div>\n        </div>\n      </div>\n      <div class=\"digital-tree__control\">\n        <ControlButton\n          @onPauseGame = \"pauseGame\"\n          :isGamePaused = \"isGamePaused\"\n          :isCanChangeColor = \"isCanChangeColor\"\n          @onChangeColor = \"ChangeColor\"\n        />\n        <div class=\"digital-tree__counter\">\n          <CycleCounter\n            :cycleCounter=\"cycleCounter\"\n            :fullCycleCounter=\"fullCycleCounter\"\n          />\n          <div class=\"digital-tree__counter-box\">\n            <div class=\"digital-tree__counter-text\">Delay (ms) </div>\n            <input\n              type=\"number\"\n              id=\"counter-speed\"\n              v-model=\"timeRange\"\n              placeholder=\"Speed\"\n              name=\"quantity\"\n              step=\"10\"\n              min=\"0\"\n              max=\"6000\"\n              class=\"counter-text-input\"\n            >\n          </div>\n          <div class=\"digital-tree__counter-box\">\n            <div class=\"digital-tree__counter-text\" >Tree count</div>\n            <input\n              type=\"number\"\n              id=\"counter-tree\"\n              v-model=\"treeCount\"\n              placeholder=\"Tree count\"\n              name=\"quantity\"\n              step=\"1\"\n              min=\"0\"\n              max=\"10\"\n              class=\"counter-text-input\"\n            >\n          </div>\n          <div class=\"digital-tree__counter-box\">\n            <div class=\"digital-tree__counter-text\">Column</div>\n            <input\n              type=\"number\"\n              id=\"counter-tree\"\n              v-model=\"fieldWidth\"\n              placeholder=\"Tree count\"\n              name=\"quantity\"\n              step=\"1\"\n              min=\"1\"\n              class=\"counter-text-input\"\n            >\n          </div>\n          <div class=\"digital-tree__counter-box\">\n            <div class=\"digital-tree__counter-text\">Raw</div>\n            <input\n              type=\"number\"\n              id=\"counter-field-size-raw\"\n              v-model=\"fieldHeight\"\n              placeholder=\"Tree count\"\n              name=\"quantity\"\n              step=\"1\"\n              min=\"1\"\n              class=\"counter-text-input\"\n            >\n          </div>\n        </div>\n        <div class=\"digital-tree__counter-trees-cell-boxs\" id=\"counter-trees-cell\">\n          <CellCounter\n            v-for=\"tree in digitalTrees\" :key=\"tree.id\"\n            :tree=\"tree\"\n          />\n        </div>\n        <!-- <LogBox\n          :logBoxArray = \"logTextArray\"\n        /> -->\n      </div>\n    </div>\n    <!-- <div>\n      <FieldCenter />\n    </div> -->\n    <!-- <div >\n      <div v-for=\"cellRaw in fieldCells\" :key=\"cellRaw\" class=\"testArray\">\n        <div v-for=\"cell in fieldRaw\" :key=\"cell.id\" >\n          <CellBlock/>\n        </div>\n        <br>\n      </div>\n      Some text. Hello from WS\n    </div> -->\n  </div>\n</template>\n\n<script>\n\nimport cellObject from '../classes/cellObject'\nimport treeObject from '../classes/treeObject'\nimport ControlButton from '../control-button'\nimport CellHeader from '../cell-header'\nimport CellCounter from '../cell-counter'\nimport CellsField from '../cells-field'\nimport CycleCounter from '../cycle-counter'\nimport LogBox from '../log-box'\nimport { ref, onMounted, watch, computed } from 'vue'\n\nconst filedBox = {\n  name: 'fieldBox',\n  components: {\n    ControlButton,\n    CellHeader,\n    CellCounter,\n    CellsField,\n    CycleCounter,\n    LogBox,\n  },\n  setup() {\n    const logTextArray = ref([])\n    const fieldWidth = ref(30)\n    const fieldHeight = ref(10)\n    const digitalTrees = ref([])\n    const treeCount = ref(5)\n    const fieldCells = ref(new Array(fieldHeight.value).fill(0)\n      .map(() => new Array(fieldWidth.value)))\n\n    const timeRange = ref(1000)\n\n    const cycleCounter = ref(0)\n    const fullCycleCounter = ref(0)\n\n    const isGameStop = ref(false)\n    const isGamePaused = ref(false)\n    const isGamePausedAtMoment = ref(false)\n    const isCanChangeColor = ref(true)\n    const displayCell = ref({})\n\n    // const isAnyTreesCanMove = computed(() => {\n    //   const isFreeCellsArray = digitalTrees.value\n    //     .map(Tree => Tree.isFreeCellsAround)\n    //   const isCanMove = isFreeCellsArray.includes(true)\n    //   return isCanMove\n    // })\n    const isAnyTreesCanMove = computed(() => {\n      return true\n    })\n\n    watch(() => treeCount.value, async (current, previous) => {\n      isGamePaused.value = true\n      current > previous ? await addTree() : await deleteTree()\n    })\n\n    watch(() => fieldWidth.value, (current, previous) => {\n      current > previous ? addColumn() : deleteColumn()\n    })\n\n    watch(() => fieldHeight.value, (current, previous) => {\n      current > previous ? addRow() : deleteRow()\n    })\n\n    console.log('Hi here is start')\n    createFieldObject()\n    createFirstTrees()\n\n    onMounted(() => {\n      console.log('Hi Mounted')\n      configBeforeStart()\n      console.log('config before start finished')\n      mainCycle()\n    })\n\n    function createFieldObject() {\n      for (let j = 0; j < fieldCells.value.length; j++) {\n        for (let i = 0; i < fieldCells.value[j].length; i++) {\n          fieldCells.value[j][i] = new cellObject(\n            i,\n            j,\n            fieldCells.value,\n          )\n        }\n      }\n    }\n\n    function createFirstTrees() {\n      for (let treeIndex = 0; treeIndex < treeCount.value; treeIndex++) {\n        new treeObject(digitalTrees.value, fieldCells.value)\n      }\n    }\n\n    function configBeforeStart() {\n      console.log('In config')\n      addFirstCellTrees()\n    }\n\n    function addFirstCellTrees() {\n      for (const tree of digitalTrees.value) {\n        tree.addFirstCell(\n          logTextArray.value,\n        )\n      }\n    }\n\n    async function mainCycle() {\n      while (isGameStop.value === false) {\n        if (isGamePaused.value === false) {\n          await cycle()\n        }\n        if (isGamePaused.value === false) {\n          restart()\n        } else {\n          await sleep(200)\n        }\n      }\n    }\n\n    async function cycle() {\n      while (isAnyTreesCanMove.value) {\n        console.time('startCycle')\n        await sleep(timeRange.value)\n        // console.log('======= new turn =======')\n        chooseActionAtAllTree()\n        // console.log('tree in main cycle', digitalTrees.value)\n        cycleCounter.value += 1\n        if (isGamePaused.value) {\n          isGamePausedAtMoment.value = true\n          return\n        }\n        console.timeEnd('startCycle')\n      }\n      fullCycleCounter.value += 1\n      logNewFullCycle()\n    }\n\n    function sleep(ms) {\n      return new Promise((resolve) => {\n        setTimeout(resolve, ms)\n      })\n    }\n\n    async function chooseActionAtAllTree() {\n      for (const tree of digitalTrees.value) {\n        await tree.chooseAction(\n          logTextArray.value,\n        )\n        // this.$forceUpdate()\n      }\n    }\n\n    function fallDownCells() {\n      for (const tree of digitalTrees.value) {\n        if (tree.lastCell.isCellFalling) {\n        }\n      }\n    }\n\n    function logNewFullCycle() {\n      logTextArray.value.push('========= New cycle =========')\n    }\n\n    function restart() {\n      cleanField()\n      console.log('CleanField')\n\n      for (const tree of digitalTrees.value) {\n        tree.reset()\n      }\n\n      if (isCanChangeColor.value) {\n        changeTreesColor()\n      }\n      // logFieldCell()\n      configBeforeStart()\n      console.log('config')\n    }\n\n    function cleanField() {\n      for (const raw of fieldCells.value) {\n        for (const cell of raw) {\n          cell.setFieldType()\n        }\n      }\n    }\n\n    function changeTreesColor() {\n      for (const tree of digitalTrees.value) {\n        tree.changeRandomColor()\n      }\n    }\n\n    function pauseGame() {\n      isGamePaused.value = !isGamePaused.value\n      if (isGamePaused.value === false) {\n        // this.mainCycle()\n        isGamePausedAtMoment.value = false\n      }\n    }\n\n    function ChangeColor() {\n      isCanChangeColor.value = isCanChangeColor.value === true ? false : true\n    }\n\n    async function addTree() {\n      while (isGamePausedAtMoment.value === true) {\n        await sleep(200)\n      }\n      console.log('Added tree')\n      new treeObject(digitalTrees.value)\n      digitalTrees.value[digitalTrees.value.length - 1].addFirstCell(\n        logTextArray.value,\n      )\n      await pauseGame()\n    }\n\n    async function deleteTree() {\n      while (isGamePausedAtMoment.value === true) {\n        await sleep(200)\n      }\n      for (const cell of digitalTrees.value[digitalTrees.value.length - 1].cells) {\n        cell.setFieldType()\n        await sleep(100)\n      }\n      digitalTrees.value.pop()\n      await pauseGame()\n    }\n\n    function addColumn() {\n      for (let j = 0; j < fieldCells.value.length; j++) {\n        fieldCells.value[j].push(\n          new cellObject(\n            fieldCells.value[j].length,\n            j,\n            fieldCells.value,\n          ),\n        )\n      }\n    }\n\n    function deleteColumn() {\n      for (let j = 0; j < fieldCells.value.length; j++) {\n        fieldCells.value[j].pop()\n      }\n    }\n\n    function addRow() {\n      fieldCells.value.push([])\n      for (let i = 0; i < fieldCells.value[0].length; i++) {\n        fieldCells.value[fieldCells.value.length - 1].push(\n          new cellObject(\n            i,\n            fieldCells.value.length - 1,\n            fieldCells.value,\n          ),\n        )\n      }\n    }\n\n    function deleteRow() {\n      fieldCells.value.pop()\n    }\n\n    function displayCellParam(i, j) {\n      console.log('display cell', i, j);\n      console.log(`display cell`, i, ' ', j, fieldCells.value[j][i]);\n      displayCell.value = fieldCells.value[j][i]\n      // displayCell.value = cell\n    }\n\n    return {\n      treeCount,\n      timeRange,\n      fieldWidth,\n      fieldCells,\n      fieldHeight,\n      displayCell,\n      logTextArray,\n      cycleCounter,\n      digitalTrees,\n      isGamePaused,\n      isCanChangeColor,\n      fullCycleCounter,\n      pauseGame,\n      ChangeColor,\n      displayCellParam,\n    }\n  },\n}\nexport default filedBox\n</script>\n\n<style>\n  @import \"field-box\"\n</style>\n","export const BASIC_COLOR = '#808080'\nexport const TYPE_FIELD = 'field'\nexport const TYPE_CELL = 'cell'\n\nexport const GENOME_COUNT = 16\nexport const GENOME_MAX_VALUE = 32\n","import {\n  TYPE_CELL,\n  TYPE_FIELD,\n  BASIC_COLOR,\n} from \"@/constant/basic\"\n\nexport default class cellObject {\n  constructor(i, j, fieldCells) {\n    this.i = i\n    this.j = j\n    this.id = `i${i}j${j}`\n    this.indexInTree = null\n    this.type = TYPE_FIELD\n    this.color = BASIC_COLOR\n    this.genome = 0\n    this.nextCell = null\n    this.parentTree = null\n    this.isCreateAnimation = true\n    this.isCellAnimation = false\n    this.isCellFalling = false\n    this.fieldCells = fieldCells\n  }\n\n  setColor(color) {\n    this.color = color\n  }\n\n  setCellType() {\n    this.type = TYPE_CELL\n    this.isCreateAnimation = false\n    this.isCellAnimation = true\n  }\n\n  setFieldType() {\n    this.isCreateAnimation = false\n    this.isCreateAnimation = true\n    this.isCellAnimation = false\n    this.type = TYPE_FIELD\n    this.color = BASIC_COLOR\n    this.indexInTree = null\n    this.isCellFalling = false\n    this.parentTree = null\n    this.genome = 0\n    this.nextCell = null\n  }\n\n  generatedEnergyByCell() {\n    const countCellAbove = 2\n\n    if (this.isCellFalling) {\n      return 0\n    } else {\n      const isCellAtUpperPoint = this.j === 0\n      if (isCellAtUpperPoint) {\n        return 3\n      }\n      let cellGeneratedEnergy = 0\n      for (let index = 1; index < countCellAbove + 1; index++) {\n        const jForCheck = this.j - index\n        const isCellExist = jForCheck in this.fieldCells && this.i in this.fieldCells[jForCheck]\n        if (isCellExist) {\n          const isUpperCellField = this.fieldCells[jForCheck][this.i]?.type === TYPE_FIELD\n          if (isUpperCellField) {\n            cellGeneratedEnergy = cellGeneratedEnergy + 1\n          } else {\n            index = countCellAbove + 1\n            return cellGeneratedEnergy\n          }\n        } else {\n          index = countCellAbove + 1\n          return 3\n        }\n      }\n      return cellGeneratedEnergy\n    }\n  }\n\n  cellFalling() {\n    this.isCellFalling = true\n  }\n\n  cellIsNotFalling() {\n    this.isCellFalling = false\n  }\n}\n","import {\n  TYPE_FIELD,\n  BASIC_COLOR,\n  GENOME_COUNT,\n  GENOME_MAX_VALUE,\n} from \"@/constant/basic\"\n\nexport default class treeObject {\n  constructor(\n    digitalTrees,\n    fieldCells,\n    genome = this.gererateGenome(),\n    headColor = this.generateRandomColor(),\n    bodyColor = this.generateRandomColor(),\n  ) {\n    this.digitalTrees = digitalTrees\n    digitalTrees.push(this)\n    this.fieldCells = fieldCells\n    this.id = this.generateID()\n    this.cells = []\n    this.counterCell = 0\n    this.counterCellAll = 0\n    this.lastCell = null\n    this.isFreeCellsAround = true\n    this.headColor = headColor\n    this.bodyColor = bodyColor\n    this.positionCurrent = null\n    this.positionNext = null\n    this.energy = 20\n    this.genome = genome\n  }\n\n  generateRandomColor() {\n    let randomColor = BASIC_COLOR\n    while (randomColor === BASIC_COLOR) {\n      randomColor = '#'\n      randomColor += Math.floor(Math.random() * 16777215).toString(16)\n    }\n    return randomColor\n  }\n\n  generateID() {\n    const length = 3\n    let result = ''\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    const charactersLength = characters.length\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength))\n    }\n    return result\n  }\n\n  addFirstCell(logTextArray) {\n    try {\n      const firstCell = this.randomCellFloor()\n      this.cells.push(firstCell)\n\n      this.cells[0].setColor(this.headColor)\n      this.cells[0].setCellType()\n      this.cells[0].parentTree = this\n      this.cells[0].indexInTree = this.cells.length - 1\n      this.cells[0].genome = 0\n      this.refreshLastCell()\n      this.createCellLog(logTextArray)\n    } catch (error) {\n      console.log('========== Some Error ==========')\n      console.log(error)\n    }\n  }\n\n  addCellFromParent(cell) {\n    this.cells.push(cell)\n    this.counterCell = 1\n    this.counterCellAll = 1\n    this.refreshLastCell()\n    this.lastCell.genome = 0\n    this.lastCell.parentTree = this\n  }\n\n  chooseRandomStartCell() {\n    let whileCounter = 0\n    let j\n    let i\n    while (whileCounter < this.fieldCells.length * this.fieldCells[0].length) {\n      j = this.getRandomInt(0, this.fieldCells.length)\n      i = this.getRandomInt(0, this.fieldCells[0].length)\n      // logSomeText(\"In chooseRandomStartCell()\")\n      console.log('In chooseRandomStartCell()')\n\n      if (this.fieldCells[j][i].color === BASIC_COLOR) {\n        return this.fieldCells[j][i]\n      }\n      whileCounter += 1\n   }\n  }\n\n  randomCellFloor() {\n    let whileCounter = 0\n    let j\n    let i\n    while (whileCounter < this.fieldCells[0].length * 2) {\n      j = this.fieldCells.length - 1\n      i = this.getRandomInt(0, this.fieldCells[0].length)\n      // logSomeText(\"In chooseRandomStartCell()\")\n      console.log('In chooseRandomStartCell()')\n\n      if (this.fieldCells[j][i].type === TYPE_FIELD) {\n        return this.fieldCells[j][i]\n      }\n      whileCounter += 1\n   }\n  }\n\n  getRandomInt(min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min)) + min // Максимум не включается, минимум включается\n  }\n\n  gererateGenome() {\n    const genome = new Array(GENOME_COUNT).fill(0)\n    .map(() => {\n      return {\n        upGen: this.getRandomInt(0, GENOME_MAX_VALUE),\n        downGen: this.getRandomInt(0, GENOME_MAX_VALUE),\n        leftGen: this.getRandomInt(0, GENOME_MAX_VALUE),\n        rightGen: this.getRandomInt(0, GENOME_MAX_VALUE),\n      }\n    })\n    console.log('genome', genome);\n    return genome\n  }\n\n  refreshLastCell() {\n    this.lastCell = this.cells[this.cells.length - 1]\n  }\n\n  chooseAction(logTextArray) {\n    if (this.lastCell.isCellFalling) {\n      // console.time('moveCellDown')\n      this.moveCellDown(logTextArray)\n      // console.timeEnd('moveCellDown')\n    } else {\n      // console.time('realiseGenome')\n      this.realiseGenome(logTextArray)\n      // this.createCell(logTextArray)\n      // console.timeEnd('realiseGenome')\n    }\n    // console.time('refreshEnergy')\n    this.refreshEnergy()\n    // console.timeEnd('refreshEnergy')\n  }\n\n  realiseGenome(logTextArray) {\n    this.cells.forEach(cell => {\n      if (cell.color === this.headColor) {\n        const cellGenome = this.genome[cell.genome]\n        // for (const gen in cellGenome) {\n        //   cellGenome[gen]\n\n        // }\n        // console.log('cellGenome', cellGenome);\n        let newI = null\n        let newJ = null\n        if (cellGenome.upGen <= 15) {\n          newI = cell.i\n          newJ = cell.j - 1\n          if (this.isNextCellField(newI, newJ)) {\n            this.createCellGenome(cell, logTextArray, newI, newJ, cellGenome.upGen)\n          }\n        }\n        if (cellGenome.downGen <= 15) {\n          newI = cell.i\n          newJ = cell.j + 1\n          if (this.isNextCellField(newI, newJ)) {\n            this.createCellGenome(cell, logTextArray, newI, newJ, cellGenome.downGen)\n          }\n        }\n        if (cellGenome.leftGen <= 15) {\n          newI = cell.i - 1\n          newJ = cell.j\n          if (this.isNextCellField(newI, newJ)) {\n            this.createCellGenome(cell, logTextArray, newI, newJ, cellGenome.leftGen)\n          }\n        }\n        if (cellGenome.rightGen <= 15) {\n          newI = cell.i + 1\n          newJ = cell.j\n          if (this.isNextCellField(newI, newJ)) {\n            this.createCellGenome(cell, logTextArray, newI, newJ, cellGenome.rightGen)\n          }\n        }\n      }\n    })\n  }\n\n  createCellGenome(cell, logTextArray, newI, newJ, genomeToImplement) {\n    // console.log(`next i and j`, i, j);\n    cell.setColor(this.bodyColor)\n    const nextCell = this.fieldCells[newJ][newI]\n    nextCell.setColor(this.headColor)\n    nextCell.setCellType()\n\n    this.counterCellAll = this.counterCellAll + 1\n    this.counterCell = this.counterCell + 1\n    nextCell.indexInTree = this.counterCellAll\n    nextCell.genome = genomeToImplement\n    nextCell.parentTree = this\n    this.cells.push(nextCell)\n    this.refreshLastCell()\n    this.createCellLog(logTextArray)\n  }\n\n  isNextCellField(newI, newJ) {\n    if (newJ in this.fieldCells && newI in this.fieldCells[newJ]) {\n      return this.fieldCells[newJ][newI]?.color === BASIC_COLOR\n    } else {\n      return false\n    }\n  }\n\n  createCell(logTextArray) {\n    const freeCellsArray = this.FreeCellsAround2(\n      this.lastCell,\n    )\n    // console.log('freeCellsArray', freeCellsArray);\n\n    if (freeCellsArray.length === 0) {\n      this.isFreeCellsAround = false\n      this.lastCell.isCellFalling = true\n      if (this.counterCell > 1) {\n        this.deleteTreeBody()\n      }\n    } else {\n      const FreeCellCoordinate = this.chooseRandomPoint(freeCellsArray)\n      const [j, i] = FreeCellCoordinate\n      this.addNextCell(j, i, logTextArray)\n    }\n  }\n\n  FreeCellsAround(cell) {\n    // console.log('in free cell');\n    // console.log(cell.i, ' ', cell.j);\n    const freeFields = []\n    let i = cell.i - 1\n    let j = cell.j - 1\n    const iEnd = cell.i + 2\n    const jEnd = cell.j + 2\n\n    for (; j < jEnd; j++) {\n      for (i = cell.i - 1; i < iEnd; i++) {\n        if (this.isCoordinateInField(i, j)) {\n          if (this.fieldCells[j][i].color === BASIC_COLOR) {\n            freeFields.push([j, i])\n          }\n        }\n      }\n    }\n    return freeFields\n  }\n\n  FreeCellsAround2(cell) {\n    // console.log('in free cell');\n    // console.log(cell.i, ' ', cell.j);\n    const freeFields = []\n    let i = cell.i - 1\n    let j = cell.j - 1\n    const iEnd = cell.i + 2\n    const jEnd = cell.j + 2\n    const fieldToCheck = []\n\n    for (let index = j; index < jEnd; index++) {\n\n    }\n\n    for (; j < jEnd; j++) {\n      for (i = cell.i - 1; i < iEnd; i++) {\n        if (j in this.fieldCells && i in this.fieldCells[j]) {\n          if (this.fieldCells[j][i].type === TYPE_FIELD) {\n            freeFields.push([j, i])\n          }\n        }\n      }\n    }\n    return freeFields\n  }\n\n  isCoordinateInField(i, j) {\n    return i >= 0 && i < this.fieldCells[0].length && j >= 0 && j < this.fieldCells.length\n  }\n\n  chooseRandomPoint(freeCells) {\n    const randomValue = this.getRandomInt(0, freeCells.length)\n    return freeCells[randomValue]\n  }\n\n  addNextCell(j, i, logTextArray) {\n    // console.log(`next i and j`, i, j);\n    this.lastCell.setColor(this.bodyColor)\n    const nextCell = this.fieldCells[j][i]\n    nextCell.setColor(this.headColor)\n    nextCell.setCellType()\n\n    this.counterCellAll = this.counterCellAll + 1\n    this.counterCell = this.counterCell + 1\n    nextCell.indexInTree = this.counterCellAll\n    nextCell.parentTree = this\n    this.cells.push(nextCell)\n    this.refreshLastCell()\n    // this.nextCell = nextCell\n    this.createCellLog(logTextArray)\n  }\n\n  createCellLog(logTextArray) {\n    // let logText = \"Create cell column:\" + this.lastCell.i + \", raw:\" + this.lastCell.j +\", TreeID: \"+this.id\n    const logObject = {\n      i: this.lastCell.i,\n      j: this.lastCell.j,\n      id: this.id,\n      type: 'create',\n      headColor: this.headColor,\n      bodyColor: this.bodyColor,\n    }\n    logTextArray.push(logObject)\n    if (logTextArray.length > 50) {\n      logTextArray.shift()\n    }\n  }\n\n  reset() {\n    this.isFreeCellsAround = true\n    this.cells = []\n    this.lastCell = null\n  }\n\n  changeRandomColor() {\n    this.headColor = this.generateRandomColor()\n    this.bodyColor = this.generateRandomColor()\n  }\n\n  deleteTreeBody() {\n    // console.log('in delete body');\n\n    this.cells.forEach(cell => {\n      if (cell.color === this.bodyColor) {\n        cell.setFieldType()\n      }\n    })\n    this.cells = this.cells.filter(cell => cell.color === this.headColor)\n\n    this.cells.forEach(cell => cell.cellFalling())\n\n    this.counterCell = 1\n  }\n\n  moveCellDown(logTextArray) {\n    // console.log('i:', this.i, 'j:', this.j, 'Tree id:', this.parentTree);\n    // console.log('field move', this.fieldCells[this.j][this.i]);\n    if (this.lastCell.j === this.fieldCells.length - 1) {\n      // console.log('At bottom');\n      this.lastCell.isCellFalling = false\n      this.lastCell.isFreeCellsAround = true\n      this.realiseGenome(logTextArray)\n    } else {\n      // const nextJ = this.j + 1\n      // console.log('need move');\n      this.positionCurrent = this.lastCell\n      this.positionNext = this.fieldCells[this.positionCurrent.j + 1][this.positionCurrent.i]\n      // console.log('positionNext', this.positionNext);\n      const isBottomCellField = this.positionNext.type === TYPE_FIELD\n      // console.log('isBottomCellField', isBottomCellField);\n      if (isBottomCellField) {\n        // console.log('moveTo');\n        // console.log(this);\n\n        const keyToCopy = [\n          'type',\n          'color',\n          'parentTree',\n          'isCellFalling',\n          'indexInTree',\n        ]\n\n        keyToCopy.forEach(key => {\n          this.positionNext[key] = this.positionCurrent[key]\n        })\n\n        this.lastCell = this.positionNext\n        this.cells[0] = this.positionNext\n        this.positionCurrent.setFieldType()\n      }\n    }\n  }\n\n  refreshEnergy() {\n    // console.time('increaseEnergy')\n    this.increaseEnergy()\n    // console.timeEnd('increaseEnergy')\n    // console.time('reduceEnergy')\n    this.reduceEnergy()\n    // console.timeEnd('reduceEnergy')\n    // console.time('checkIsEnergyOver')\n    this.checkIsEnergyOver()\n    // console.timeEnd('checkIsEnergyOver')\n  }\n\n  increaseEnergy() {\n    this.cells.forEach(cell => {\n      const generatedEnergyByCell = cell.generatedEnergyByCell()\n      if (generatedEnergyByCell) {\n        this.energy = this.energy + cell.generatedEnergyByCell()\n      }\n    })\n  }\n\n  reduceEnergy() {\n    this.energy = this.energy - this.cells.length\n  }\n\n  checkIsEnergyOver() {\n    const isEnergyOver = this.energy < 0\n    if (isEnergyOver) {\n      this.deleteTreeBody()\n      if (this.cells.length > 1) {\n        this.createTreeFromHeadCell()\n      }\n      if (this.cells.length <= 1) {\n        this.deleteAllCells()\n      }\n      this.deleteEmptyTrees()\n    }\n  }\n\n  createTreeFromHeadCell() {\n    this.cells.forEach(cell => {\n      const newTree = new treeObject(\n        this.digitalTrees,\n        this.fieldCells,\n        this.genome,\n        this.headColor,\n        this.bodyColor,\n      )\n      newTree.addCellFromParent(cell)\n    })\n  }\n\n  deleteAllCells() {\n    this.cells.forEach(cell => cell.setFieldType())\n    this.cells = []\n  }\n\n  deleteEmptyTrees() {\n      const treeIndex = this.digitalTrees.findIndex(tree => tree.cells.length === 0)\n      if (treeIndex !== -1) {\n        this.digitalTrees.splice(treeIndex, 1)\n      }\n    // this.digitalTrees.forEach(tree => {\n    //   let treeIndex = this.digitalTrees.findIndex(tree => tree.cells.length === 0)\n    //   while (treeIndex !== -1) {\n    //     this.digitalTrees.splice(treeIndex, 1)\n    //   }\n    // }\n\n    // })\n  }\n}\n","<template>\n  <div class=\"digital-tree__control-button\">\n    <img\n      v-if=\"isGamePaused === false\"\n      src=\"https://img.icons8.com/external-bearicons-glyph-bearicons/64/000000/external-Pause-essential-collection-bearicons-glyph-bearicons.png\"\n      class=\"digital-tree__field-left-control-button\"\n      style=\"height:48px\"\n      id=\"field-left-control-pause\"\n      @click=\"pauseGame\"\n    />\n    <img\n      v-else\n      src=\"https://img.icons8.com/external-bearicons-glyph-bearicons/64/000000/external-Play-essential-collection-bearicons-glyph-bearicons.png\"\n      class=\"digital-tree__field-left-control-button\"\n      style=\"height:48px\"\n      id=\"field-left-control-pause\"\n      @click=\"pauseGame\"\n    />\n    <img\n      src=\"https://img.icons8.com/glyph-neue/64/000000/restart.png\"\n      class=\"digital-tree__field-left-control-button\"\n      id=\"field-left-control-restart\"\n      style=\"height:56px\"\n      @click=\"restartPage\"\n    />\n    <img\n      src=\"@/assets/paint-palette-svgrepo-com.svg\"\n      class=\"digital-tree__field-left-control-button\"\n      id=\"field-left-control-color\"\n      :style=\"colorButtonStyle\"\n      @click=\"stopChangeColor\"\n    />\n  </div>\n</template>\n\n<script>\n\nimport { ref } from 'vue'\n\nexport default ({\n  name: 'ControlButton',\n  props: {\n    isGamePaused: {\n      type: Boolean,\n    },\n    isCanChangeColor: {\n      type: Boolean,\n    },\n  },\n  setup(props, { emit }) {\n    const colorButtonStyle = ref({})\n\n    function restartPage() {\n      location.reload()\n    }\n\n    function pauseGame() {\n      emit('onPauseGame')\n    }\n\n    function stopChangeColor() {\n      colorButtonStyle.value = props.isCanChangeColor === false\n        ? { height: '40px' }\n        : { filter: 'invert(0.6)', height: '40px' }\n      emit('onChangeColor')\n    }\n\n    return {\n      restartPage,\n      pauseGame,\n      colorButtonStyle,\n      stopChangeColor,\n    }\n  },\n})\n</script>\n\n<style>\n  @import \"control-button\"\n</style>\n","import { render } from \"./control-button.vue?vue&type=template&id=411475a9\"\nimport script from \"./control-button.vue?vue&type=script&lang=js\"\nexport * from \"./control-button.vue?vue&type=script&lang=js\"\n\nimport \"./control-button.vue?vue&type=style&index=0&id=411475a9&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"digital-tree__header\">\n    <div class=\"digital-tree__header-logo\">\n      <img\n        src=\"@/assets/vuejs-logo.svg\"\n        style=\"height: 32px; opacity: 0.5;\"\n        alt=\"Vue logo\"\n      >\n    </div>\n    <div class=\"digital-tree__header-text\">\n      Digital Trees\n    </div>\n    <div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n  @import 'cell-header';\n</style>\n","import { render } from \"./cell-header.vue?vue&type=template&id=17d73d8c&scoped=true\"\nconst script = {}\n\nimport \"./cell-header.vue?vue&type=style&index=0&id=17d73d8c&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-17d73d8c\"]])\n\nexport default __exports__","<template>\n  <div class=\"cell-counter\">\n    <div\n      class=\"block-counter-head\"\n      :style=\"{background: tree.headColor}\"\n    >\n    </div>\n    <div\n      class=\"block-counter\"\n      :style=\"{background: tree.bodyColor}\"\n    >\n      <p\n        class=\"cellText\"\n        :style=\"{color: tree.bodyColor}\"\n      >\n        <!-- :style=\"{color: tree.color}\" -->\n        Energ:{{tree.energy}}, Cells: {{tree.cells.length}}\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'CellCounter',\n  props: {\n    tree: {\n      type: Object,\n    },\n  },\n}\n\n</script>\n\n<style scoped>\n  @import 'cell-counter';\n</style>\n\n","import { render } from \"./cell-counter.vue?vue&type=template&id=f986589e&scoped=true\"\nimport script from \"./cell-counter.vue?vue&type=script&lang=js\"\nexport * from \"./cell-counter.vue?vue&type=script&lang=js\"\n\nimport \"./cell-counter.vue?vue&type=style&index=0&id=f986589e&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f986589e\"]])\n\nexport default __exports__","<template>\n  <div class=\"blocks-field\">\n    <div\n      v-for=\"(cellRaw, index) in fieldCells\"\n      :key=\"index\"\n      class=\"testArray\"\n    >\n      <div\n        v-for=\"cell in cellRaw\"\n        :key=\"cell.id\"\n        class=\"testArray\"\n      >\n        <CellBlock\n          :cellObject=\"cell\"\n          @click=\"$emit('clicked', cell.i, cell.j)\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CellBlock from '../cell-block'\n\nexport default {\n  name: 'CellsField',\n  components: {\n    CellBlock,\n  },\n  props: {\n    fieldCells: {\n      type: Array,\n    },\n  },\n}\n</script>\n\n<style scoped>\n @import 'cells-field'\n</style>\n","<template>\n  <div :class=\"{\n         block: true,\n         create_block_animation: cellObject.isCreateAnimation,\n         change_size_animation: cellObject.isCellAnimation\n       }\"\n       :style=\"{background: cellObject.color}\"\n  >\n    <p\n      v-if=\"cellObject.type==='cell'\"\n      :class=\"{cellText: true, }\"\n      :style=\"{color: cellObject.color}\"\n    >\n      <!-- {{cellObject.id}} -->\n      <!-- {{cellObject.id}} -->\n      <!-- {{cellObject.parentTree.id}}-{{cellObject.indexInTree}} -->\n      <!-- {{cellObject.j}}-{{cellObject.i}} id{{cellObject.parentTree.id}} -->\n\n      <!-- {{cellObject.j}}-{{cellObject.i}} id:{{cellObject.parentTree.id}} -->\n\n    </p>\n  </div>\n</template>\n\n<script>\n\nimport { ref, computed } from 'vue'\n\nexport default {\n  name: 'CellObject',\n  props: {\n    cellObject: {\n      type: Object,\n    },\n  },\n\n  setup(props) {\n    const isField = ref('false')\n    const isCell = ref('false')\n\n    isField.value = computed(() => props.cellObject.type === 'field')\n    isCell.value = computed(() => props.cellObject.type === 'cell')\n\n    return {\n      isField,\n      isCell,\n    }\n  },\n}\n\n</script>\n\n<style scoped>\n  @import 'cell-block';\n</style>\n","import { render } from \"./cell-block.vue?vue&type=template&id=7db54040&scoped=true\"\nimport script from \"./cell-block.vue?vue&type=script&lang=js\"\nexport * from \"./cell-block.vue?vue&type=script&lang=js\"\n\nimport \"./cell-block.vue?vue&type=style&index=0&id=7db54040&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7db54040\"]])\n\nexport default __exports__","import { render } from \"./cells-field.vue?vue&type=template&id=47df799a&scoped=true\"\nimport script from \"./cells-field.vue?vue&type=script&lang=js\"\nexport * from \"./cells-field.vue?vue&type=script&lang=js\"\n\nimport \"./cells-field.vue?vue&type=style&index=0&id=47df799a&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-47df799a\"]])\n\nexport default __exports__","<template>\n  <div class=\"digital-tree__counter_cycle\">\n    <div>\n      <div class=\"digital-tree__counter-title\">\n        All cycle\n      </div>\n      <div class=\"digital-tree__counter-count\" id=\"counter-count\">\n        {{ cycleCounter }}\n      </div>\n    </div>\n    <div>\n      <div class=\"digital-tree__counter-title\">\n        Full cycle\n      </div>\n      <div class=\"digital-tree__counter-count\" id=\"counter-fullCircle-count\">\n        {{ fullCycleCounter }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'CycleCounter',\n  props: {\n    cycleCounter: {\n      type: Number,\n    },\n    fullCycleCounter: {\n      type: Number,\n    },\n  },\n}\n</script>\n\n<style scoped>\n  @import 'cycle-counter'\n</style>\n","import { render } from \"./cycle-counter.vue?vue&type=template&id=013cca70&scoped=true\"\nimport script from \"./cycle-counter.vue?vue&type=script&lang=js\"\nexport * from \"./cycle-counter.vue?vue&type=script&lang=js\"\n\nimport \"./cycle-counter.vue?vue&type=style&index=0&id=013cca70&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-013cca70\"]])\n\nexport default __exports__","<template>\n  <div class=\"digital-tree__log-box\">\n    <!-- <div class=\"digital-tree__field-left-title\">\n      Logbox\n    </div> -->\n    <div class=\"digital-tree__logbox-title digital-tree__log-box-border\" style=\"border-style: solid\">\n      <div\n        class=\"digital-tree__field-left-logbox-text\"\n        style=\"border: none\"\n      >\n        <div\n          class=\"digital-tree__field-left-logbox-td\"\n          style=\"width: 56px; margin-left: 0px;\"\n        >\n          Action\n        </div>\n        <div\n          class=\"digital-tree__field-left-logbox-td\"\n          style=\"width: 48px\"\n        >\n          Tree\n\n        </div>\n        <div\n          class=\"digital-tree__field-left-logbox-td\"\n          style=\"width: 48px\"\n        >\n          Raw\n        </div>\n        <div\n          class=\"digital-tree__field-left-logbox-td\"\n          style=\"width: 48px\"\n        >\n          Col.\n        </div>\n      </div>\n    </div>\n    <div class=\"digital-tree__field-left-logbox \" id=\"logbox\">\n      <div\n        v-for=\"(log, index) in logBoxArray.slice().reverse()\"\n        :key=\"index\"\n        class=\"digital-tree__field-left-logbox-text digital-tree__log-box-border\"\n      >\n        <tr>\n          <td\n            class=\"digital-tree__field-left-logbox-td\"\n            :style=\"{color: log.bodyColor, width: 64+'px'}\"\n          >\n            Create\n          </td>\n          <td\n            class=\"digital-tree__field-left-logbox-td\"\n            :style=\"{color: log.bodyColor, width: 48+'px'}\"\n          >\n            {{log.id}}\n          </td>\n          <td\n            class=\"digital-tree__field-left-logbox-td\"\n            :style=\"{color: log.bodyColor, width: 48+'px'}\"\n          >\n            {{log.i}}\n          </td>\n          <td\n            class=\"digital-tree__field-left-logbox-td\"\n            :style=\"{color: log.bodyColor, width: 48+'px'}\"\n          >\n            {{log.j}}\n          </td>\n        </tr>\n        <!-- {{log}} -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'LogBox',\n  props: {\n    logBoxArray: {\n      type: Array,\n      scrollToBottom() {\n        console.log('Hello')\n      },\n    },\n  },\n  // maby add this function in future bue need setup()\n  // function scrollToBottom() {\n  //   const container = this.$refs.logbox;\n  //   container.scrollTop = container.scrollHeight;\n  // }\n\n}\n</script>\n\n<style scoped>\n  @import 'log-box'\n</style>\n","import { render } from \"./log-box.vue?vue&type=template&id=0f2a194b&scoped=true\"\nimport script from \"./log-box.vue?vue&type=script&lang=js\"\nexport * from \"./log-box.vue?vue&type=script&lang=js\"\n\nimport \"./log-box.vue?vue&type=style&index=0&id=0f2a194b&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0f2a194b\"]])\n\nexport default __exports__","import { render } from \"./field-box.vue?vue&type=template&id=c6e0bb32\"\nimport script from \"./field-box.vue?vue&type=script&lang=js\"\nexport * from \"./field-box.vue?vue&type=script&lang=js\"\n\nimport \"./field-box.vue?vue&type=style&index=0&id=c6e0bb32&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=452f9fd8\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=452f9fd8&lang=css\"\n\nimport exportComponent from \"/Users/ivanhryshko/Documents/github/digital-trees-vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/digital-trees-vue/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdigital_trees_vue\"] = self[\"webpackChunkdigital_trees_vue\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(3898); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_fieldBox","class","_createElementVNode","id","_createElementBlock","_createVNode","_component_CellHeader","_component_CellsField","_ctx","onClicked","parentTree","_toDisplayString","type","i","j","color","indexInTree","isCellFalling","isFreeCellsAround","genome","_component_ControlButton","onOnPauseGame","isGamePaused","isCanChangeColor","onOnChangeColor","_component_CycleCounter","cycleCounter","fullCycleCounter","_hoisted_17","$event","placeholder","name","step","min","max","_hoisted_19","_hoisted_21","_hoisted_23","_Fragment","_renderList","tree","_component_CellCounter","key","BASIC_COLOR","TYPE_FIELD","TYPE_CELL","GENOME_COUNT","GENOME_MAX_VALUE","cellObject","constructor","fieldCells","this","nextCell","isCreateAnimation","isCellAnimation","setColor","setCellType","setFieldType","generatedEnergyByCell","countCellAbove","isCellAtUpperPoint","cellGeneratedEnergy","index","jForCheck","isCellExist","isUpperCellField","cellFalling","cellIsNotFalling","treeObject","digitalTrees","gererateGenome","headColor","generateRandomColor","bodyColor","push","generateID","cells","counterCell","counterCellAll","lastCell","positionCurrent","positionNext","energy","randomColor","Math","floor","random","toString","length","result","characters","charactersLength","charAt","addFirstCell","logTextArray","firstCell","randomCellFloor","refreshLastCell","createCellLog","error","console","log","addCellFromParent","cell","chooseRandomStartCell","whileCounter","getRandomInt","ceil","Array","fill","map","upGen","downGen","leftGen","rightGen","chooseAction","moveCellDown","realiseGenome","refreshEnergy","forEach","cellGenome","newI","newJ","isNextCellField","createCellGenome","genomeToImplement","createCell","freeCellsArray","FreeCellsAround2","deleteTreeBody","FreeCellCoordinate","chooseRandomPoint","addNextCell","FreeCellsAround","freeFields","iEnd","jEnd","isCoordinateInField","freeCells","randomValue","logObject","shift","reset","changeRandomColor","filter","isBottomCellField","keyToCopy","increaseEnergy","reduceEnergy","checkIsEnergyOver","isEnergyOver","createTreeFromHeadCell","deleteAllCells","deleteEmptyTrees","newTree","treeIndex","findIndex","splice","$props","src","style","onClick","$setup","_imports_0","props","Boolean","setup","emit","colorButtonStyle","ref","restartPage","location","reload","pauseGame","stopChangeColor","value","height","__exports__","alt","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","script","background","Object","cellRaw","_component_CellBlock","cellText","isField","isCell","computed","components","CellBlock","Number","slice","reverse","width","logBoxArray","scrollToBottom","filedBox","ControlButton","CellHeader","CellCounter","CellsField","CycleCounter","LogBox","fieldWidth","fieldHeight","treeCount","timeRange","isGameStop","isGamePausedAtMoment","displayCell","isAnyTreesCanMove","createFieldObject","createFirstTrees","configBeforeStart","addFirstCellTrees","async","mainCycle","cycle","restart","sleep","time","chooseActionAtAllTree","timeEnd","logNewFullCycle","ms","Promise","resolve","setTimeout","cleanField","changeTreesColor","raw","ChangeColor","addTree","deleteTree","pop","addColumn","deleteColumn","addRow","deleteRow","displayCellParam","watch","current","previous","onMounted","fieldBox","methods","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","every","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}